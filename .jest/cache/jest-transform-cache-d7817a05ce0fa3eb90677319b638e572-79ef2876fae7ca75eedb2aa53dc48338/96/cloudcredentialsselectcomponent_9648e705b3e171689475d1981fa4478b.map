{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/custom-selects/cloud-credentials-select/cloud-credentials-select.component.ts","mappings":";;;;;;;;;AACA,wCAEuB;AACvB,0CAAmD;AACnD,+BAAuC;AACvC,+EAAoG;AAGpG,6IAA4H;AAC5H,6GAAuH;AACvH,uJAAiJ;AACjJ,oFAA+E;AAiBxE,IAAM,+BAA+B,GAArC,MAAM,+BAAgC,SAAQ,2DAAqB;IAAnE;;QAMG,2BAAsB,GAAG,IAAA,aAAM,EAAC,iDAAsB,CAAC,CAAC;IA0BlE,CAAC;IAxBC,YAAY;QACV,OAAO,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAC/D,IAAA,UAAG,EAAC,CAAC,OAAO,EAAE,EAAE;YACd,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC3B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzF,CAAC;YACD,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC5B,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,IAAI,KAAK,kDAAwB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC;YAC1G,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,2BAA2B,CAAC,MAAiD;QAC3E,OAAO,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED,oBAAoB;QAClB,OAAO,gEAA6B,CAAC;IACvC,CAAC;IAEQ,gBAAgB;;QACvB,OAAO,CAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,MAAM,EAAC,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5F,CAAC;;AA/BU,0EAA+B;;oBACzC,YAAK;sBACL,YAAK;uBACL,YAAK;gCACL,YAAK;;0CAJK,+BAA+B;IAd3C,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,6BAA6B;QACvC,8DAAwD;QACxD,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,yBAAiB;gBAC1B,WAAW,EAAE,IAAA,iBAAU,EAAC,GAAG,EAAE,CAAC,+BAA+B,CAAC;gBAC9D,KAAK,EAAE,IAAI;aACZ;SACF;QACD,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,CAAC,uCAAiB,CAAC;KAC7B,CAAC;GACW,+BAA+B,CAgC3C","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/custom-selects/cloud-credentials-select/cloud-credentials-select.component.ts"],"sourcesContent":["import { ComponentType } from '@angular/cdk/portal';\nimport {\n  Component, Input, forwardRef, inject, ChangeDetectionStrategy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, map } from 'rxjs';\nimport { CloudSyncProviderName, cloudSyncProviderNameMap } from 'app/enums/cloudsync-provider.enum';\nimport { CloudCredential } from 'app/interfaces/cloud-sync-task.interface';\nimport { Option } from 'app/interfaces/option.interface';\nimport { IxSelectWithNewOption } from 'app/modules/forms/ix-forms/components/ix-select/ix-select-with-new-option.directive';\nimport { IxSelectComponent, IxSelectValue } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { CloudCredentialsFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/cloud-credentials-form.component';\nimport { CloudCredentialService } from 'app/services/cloud-credential.service';\nimport { ChainedComponentResponse } from 'app/services/ix-chained-slide-in.service';\n\n@Component({\n  selector: 'ix-cloud-credentials-select',\n  templateUrl: './cloud-credentials-select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CloudCredentialsSelectComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [IxSelectComponent],\n})\nexport class CloudCredentialsSelectComponent extends IxSelectWithNewOption {\n  @Input() label: string;\n  @Input() tooltip: string;\n  @Input() required: boolean;\n  @Input() filterByProviders: CloudSyncProviderName[];\n\n  private cloudCredentialService = inject(CloudCredentialService);\n\n  fetchOptions(): Observable<Option[]> {\n    return this.cloudCredentialService.getCloudSyncCredentials().pipe(\n      map((options) => {\n        if (this.filterByProviders) {\n          options = options.filter((option) => this.filterByProviders.includes(option.provider));\n        }\n        return options.map((option) => {\n          return { label: `${option.name} (${cloudSyncProviderNameMap.get(option.provider)})`, value: option.id };\n        });\n      }),\n    );\n  }\n\n  getValueFromChainedResponse(result: ChainedComponentResponse<CloudCredential>): IxSelectValue {\n    return result.response.id;\n  }\n\n  getFormComponentType(): ComponentType<CloudCredentialsFormComponent> {\n    return CloudCredentialsFormComponent;\n  }\n\n  override getFormInputData(): { providers: CloudSyncProviderName[] } {\n    return this.filterByProviders?.length ? { providers: this.filterByProviders } : undefined;\n  }\n}\n"],"version":3}