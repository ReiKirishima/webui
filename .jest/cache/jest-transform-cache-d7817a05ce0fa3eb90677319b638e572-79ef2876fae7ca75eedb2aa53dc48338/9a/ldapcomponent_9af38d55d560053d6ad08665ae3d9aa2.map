{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/directory-service/components/ldap/ldap.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/directory-service/components/ldap/ldap.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit,\n} from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { map } from 'rxjs/operators';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { Role } from 'app/enums/role.enum';\nimport { idNameArrayToOptions, singleArrayToOptions } from 'app/helpers/operators/options.operators';\nimport { helptextLdap } from 'app/helptext/directory-service/ldap';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { FormActionsComponent } from 'app/modules/forms/ix-forms/components/form-actions/form-actions.component';\nimport { IxCheckboxComponent } from 'app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component';\nimport { IxChipsComponent } from 'app/modules/forms/ix-forms/components/ix-chips/ix-chips.component';\nimport { IxFieldsetComponent } from 'app/modules/forms/ix-forms/components/ix-fieldset/ix-fieldset.component';\nimport { IxInputComponent } from 'app/modules/forms/ix-forms/components/ix-input/ix-input.component';\nimport { IxSelectComponent } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { IxModalHeaderComponent } from 'app/modules/forms/ix-forms/components/ix-slide-in/components/ix-modal-header/ix-modal-header.component';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { IxTextareaComponent } from 'app/modules/forms/ix-forms/components/ix-textarea/ix-textarea.component';\nimport { WithManageCertificatesLinkComponent } from 'app/modules/forms/ix-forms/components/with-manage-certificates-link/with-manage-certificates-link.component';\nimport { IxValidatorsService } from 'app/modules/forms/ix-forms/services/ix-validators.service';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-ldap',\n  templateUrl: './ldap.component.html',\n  styleUrls: ['./ldap.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxModalHeaderComponent,\n    MatCard,\n    MatCardContent,\n    ReactiveFormsModule,\n    IxFieldsetComponent,\n    IxChipsComponent,\n    IxInputComponent,\n    IxCheckboxComponent,\n    IxSelectComponent,\n    WithManageCertificatesLinkComponent,\n    IxTextareaComponent,\n    FormActionsComponent,\n    RequiresRolesDirective,\n    MatButton,\n    TestDirective,\n    TranslateModule,\n    AsyncPipe,\n  ],\n})\nexport class LdapComponent implements OnInit {\n  protected readonly requiredRoles = [Role.DirectoryServiceWrite];\n\n  isLoading = false;\n  isAdvancedMode = false;\n\n  form = this.formBuilder.group({\n    hostname: [[] as string[], this.validatorsService.validateOnCondition(\n      (control) => (control.parent?.value as { enable: boolean })?.enable,\n      Validators.required,\n    )],\n    basedn: [''],\n    binddn: [''],\n    bindpw: [''],\n    enable: [false],\n    anonbind: [false],\n    ssl: [''],\n    certificate: [null as number],\n    validate_certificates: [false],\n    disable_freenas_cache: [false],\n    kerberos_realm: [null as number],\n    kerberos_principal: [''],\n    timeout: [null as number],\n    dns_timeout: [null as number],\n    auxiliary_parameters: [''],\n    schema: [''],\n  });\n\n  readonly helptext = helptextLdap;\n  readonly kerberosRealms$ = this.ws.call('kerberos.realm.query').pipe(\n    map((realms) => {\n      return realms.map((realm) => ({\n        label: realm.realm,\n        value: realm.id,\n      }));\n    }),\n  );\n  readonly kerberosPrincipals$ = this.ws.call('kerberos.keytab.kerberos_principal_choices').pipe(singleArrayToOptions());\n  readonly sslOptions$ = this.ws.call('ldap.ssl_choices').pipe(singleArrayToOptions());\n  readonly certificates$ = this.systemGeneralService.getCertificates().pipe(idNameArrayToOptions());\n  readonly schemaOptions$ = this.ws.call('ldap.schema_choices').pipe(singleArrayToOptions());\n  readonly isEnabled$ = this.form.select((values) => values.enable);\n\n  constructor(\n    private ws: WebSocketService,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private systemGeneralService: SystemGeneralService,\n    private dialogService: DialogService,\n    private validatorsService: IxValidatorsService,\n    private errorHandler: ErrorHandlerService,\n    private slideInRef: IxSlideInRef<LdapComponent>,\n    private translate: TranslateService,\n    private snackbar: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadFormValues();\n  }\n\n  onAdvancedModeToggled(): void {\n    this.isAdvancedMode = !this.isAdvancedMode;\n  }\n\n  onRebuildCachePressed(): void {\n    this.isLoading = true;\n    this.dialogService\n      .jobDialog(this.systemGeneralService.refreshDirServicesCache())\n      .afterClosed()\n      .pipe(untilDestroyed(this)).subscribe({\n        next: ({ description }) => {\n          this.isLoading = false;\n          this.snackbar.success(\n            this.translate.instant(description || helptextLdap.ldap_custactions_clearcache_dialog_message),\n          );\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.dialogService.error(this.errorHandler.parseError(error));\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  onSubmit(): void {\n    this.isLoading = true;\n    const values = this.form.value;\n\n    this.dialogService.jobDialog(\n      this.ws.job('ldap.update', [values]),\n      {\n        title: 'LDAP',\n      },\n    )\n      .afterClosed()\n      .pipe(\n        this.errorHandler.catchError(),\n        untilDestroyed(this),\n      )\n      .subscribe({\n        next: () => {\n          this.snackbar.success(this.translate.instant('LDAP configuration updated'));\n          this.slideInRef.close(true);\n        },\n        complete: () => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  private loadFormValues(): void {\n    this.isLoading = true;\n\n    this.ws.call('ldap.config')\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (config) => {\n          this.form.patchValue(config);\n          this.isLoading = false;\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.dialogService.error(this.errorHandler.parseError(error));\n          this.cdr.markForCheck();\n        },\n      });\n  }\n}\n"],"version":3}