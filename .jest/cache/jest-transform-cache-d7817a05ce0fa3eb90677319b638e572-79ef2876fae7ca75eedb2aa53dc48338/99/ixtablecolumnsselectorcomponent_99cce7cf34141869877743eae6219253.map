{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/components/ix-table-columns-selector/ix-table-columns-selector.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/components/ix-table-columns-selector/ix-table-columns-selector.component.ts"],"sourcesContent":["import { SelectionModel } from '@angular/cdk/collections';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, output,\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatMenuTrigger, MatMenu, MatMenuItem } from '@angular/material/menu';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { cloneDeep } from 'lodash-es';\nimport { IxSimpleChanges } from 'app/interfaces/simple-changes.interface';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { Column, ColumnComponent } from 'app/modules/ix-table/interfaces/column-component.class';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-table-columns-selector',\n  templateUrl: './ix-table-columns-selector.component.html',\n  styleUrls: ['./ix-table-columns-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatButton,\n    MatMenuTrigger,\n    IxIconComponent,\n    MatMenu,\n    MatMenuItem,\n    TranslateModule,\n    TestDirective,\n  ],\n})\nexport class IxTableColumnsSelectorComponent<T = unknown> implements OnChanges {\n  @Input() columns: Column<T, ColumnComponent<T>>[];\n\n  readonly columnsChange = output<Column<T, ColumnComponent<T>>[]>();\n\n  hiddenColumns = new SelectionModel<Column<T, ColumnComponent<T>>>(true, []);\n  private defaultColumns: Column<T, ColumnComponent<T>>[];\n\n  get isOnlyOneColumnSelected(): boolean {\n    return this.columns.filter((column) => !column.hidden && !!column.title).length === 1;\n  }\n\n  get isAllSelected(): boolean {\n    return !this.columns.filter((column) => column.hidden && !!column.title).length;\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.subscribeToColumnsChange();\n  }\n\n  ngOnChanges(changes: IxSimpleChanges<this>): void {\n    if (changes.columns.firstChange) {\n      this.defaultColumns = changes.columns.currentValue;\n      this.setInitialState();\n    }\n  }\n\n  toggleAll(): void {\n    if (this.isAllSelected) {\n      this.hiddenColumns.deselect(...this.columns);\n      this.toggle(this.columns[0]);\n    } else {\n      this.hiddenColumns.select(...this.columns);\n    }\n\n    this.columns.forEach((_cell, index) => this.toggle(this.columns[index]));\n\n    this.emitColumnsChange();\n  }\n\n  isSelected(column: Column<T, ColumnComponent<T>>): boolean {\n    return this.hiddenColumns.isSelected(column);\n  }\n\n  resetToDefaults(): void {\n    this.setInitialState();\n  }\n\n  toggle(column: Column<T, ColumnComponent<T>>): void {\n    if (this.isOnlyOneColumnSelected && !this.isSelected(column)) {\n      return;\n    }\n    this.hiddenColumns.toggle(column);\n    this.emitColumnsChange();\n    this.cdr.markForCheck();\n  }\n\n  private setInitialState(): void {\n    this.columns = cloneDeep(this.defaultColumns);\n    this.hiddenColumns.select(...this.columns);\n\n    this.defaultColumns.forEach((column, index) => {\n      if (!column.hidden) {\n        this.toggle(this.columns[index]);\n      }\n    });\n\n    this.emitColumnsChange();\n    this.cdr.markForCheck();\n  }\n\n  private subscribeToColumnsChange(): void {\n    this.hiddenColumns.changed\n      .pipe(untilDestroyed(this))\n      .subscribe((values) => {\n        if (values.removed.length) {\n          this.columns.find((column) => column.title === values.removed[0].title).hidden = false;\n        }\n        if (values.added.length) {\n          this.columns.find((column) => column.title === values.added[0].title).hidden = true;\n        }\n        this.emitColumnsChange();\n        this.cdr.markForCheck();\n      });\n  }\n\n  private emitColumnsChange(): void {\n    this.columnsChange.emit([...this.columns]);\n  }\n}\n"],"version":3}