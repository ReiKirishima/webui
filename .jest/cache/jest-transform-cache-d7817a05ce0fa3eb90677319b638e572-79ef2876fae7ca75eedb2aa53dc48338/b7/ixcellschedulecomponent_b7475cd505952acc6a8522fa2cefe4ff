7dd0c2c80bc771d9db2142f1f04b55b9
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxCellScheduleComponent = void 0;
exports.scheduleColumn = scheduleColumn;
const core_1 = require("@angular/core");
const column_component_class_1 = require("app/modules/ix-table/interfaces/column-component.class");
const schedule_to_crontab_pipe_1 = require("app/modules/pipes/schedule-to-crontab/schedule-to-crontab.pipe");
const test_directive_1 = require("app/modules/test-id/test.directive");
let IxCellScheduleComponent = class IxCellScheduleComponent extends column_component_class_1.ColumnComponent {
};
exports.IxCellScheduleComponent = IxCellScheduleComponent;
exports.IxCellScheduleComponent = IxCellScheduleComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-cell-schedule',
        template: require("./ix-cell-schedule.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [schedule_to_crontab_pipe_1.ScheduleToCrontabPipe, test_directive_1.TestDirective],
    })
], IxCellScheduleComponent);
function scheduleColumn(options) {
    return Object.assign({ type: IxCellScheduleComponent }, options);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvY29tcG9uZW50cy9peC10YWJsZS1ib2R5L2NlbGxzL2l4LWNlbGwtc2NoZWR1bGUvaXgtY2VsbC1zY2hlZHVsZS5jb21wb25lbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBY0Esd0NBRUM7QUFoQkQsd0NBQW1FO0FBQ25FLG1HQUFpRztBQUNqRyw2R0FBdUc7QUFDdkcsdUVBQW1FO0FBUzVELElBQU0sdUJBQXVCLEdBQTdCLE1BQU0sdUJBQTJCLFNBQVEsd0NBQWtCO0NBQUcsQ0FBQTtBQUF4RCwwREFBdUI7a0NBQXZCLHVCQUF1QjtJQVBuQyxJQUFBLGdCQUFTLEVBQUM7UUFDVCxRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLHNEQUFnRDtRQUNoRCxlQUFlLEVBQUUsOEJBQXVCLENBQUMsTUFBTTtRQUMvQyxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsQ0FBQyxnREFBcUIsRUFBRSw4QkFBYSxDQUFDO0tBQ2hELENBQUM7R0FDVyx1QkFBdUIsQ0FBaUM7QUFFckUsU0FBZ0IsY0FBYyxDQUFJLE9BQTRDO0lBQzVFLHVCQUFTLElBQUksRUFBRSx1QkFBdUIsSUFBSyxPQUFPLEVBQUc7QUFDdkQsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvbW9kdWxlcy9peC10YWJsZS9jb21wb25lbnRzL2l4LXRhYmxlLWJvZHkvY2VsbHMvaXgtY2VsbC1zY2hlZHVsZS9peC1jZWxsLXNjaGVkdWxlLmNvbXBvbmVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2x1bW5Db21wb25lbnQsIENvbHVtbiB9IGZyb20gJ2FwcC9tb2R1bGVzL2l4LXRhYmxlL2ludGVyZmFjZXMvY29sdW1uLWNvbXBvbmVudC5jbGFzcyc7XG5pbXBvcnQgeyBTY2hlZHVsZVRvQ3JvbnRhYlBpcGUgfSBmcm9tICdhcHAvbW9kdWxlcy9waXBlcy9zY2hlZHVsZS10by1jcm9udGFiL3NjaGVkdWxlLXRvLWNyb250YWIucGlwZSc7XG5pbXBvcnQgeyBUZXN0RGlyZWN0aXZlIH0gZnJvbSAnYXBwL21vZHVsZXMvdGVzdC1pZC90ZXN0LmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l4LWNlbGwtc2NoZWR1bGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vaXgtY2VsbC1zY2hlZHVsZS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbU2NoZWR1bGVUb0Nyb250YWJQaXBlLCBUZXN0RGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgSXhDZWxsU2NoZWR1bGVDb21wb25lbnQ8VD4gZXh0ZW5kcyBDb2x1bW5Db21wb25lbnQ8VD4ge31cblxuZXhwb3J0IGZ1bmN0aW9uIHNjaGVkdWxlQ29sdW1uPFQ+KG9wdGlvbnM6IFBhcnRpYWw8SXhDZWxsU2NoZWR1bGVDb21wb25lbnQ8VD4+KTogQ29sdW1uPFQsIEl4Q2VsbFNjaGVkdWxlQ29tcG9uZW50PFQ+PiB7XG4gIHJldHVybiB7IHR5cGU6IEl4Q2VsbFNjaGVkdWxlQ29tcG9uZW50LCAuLi5vcHRpb25zIH07XG59XG4iXSwidmVyc2lvbiI6M30=