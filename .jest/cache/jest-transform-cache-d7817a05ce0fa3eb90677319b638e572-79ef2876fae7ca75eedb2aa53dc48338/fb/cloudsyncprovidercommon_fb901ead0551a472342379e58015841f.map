{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/data-protection/cloudsync/cloudsync-wizard/steps/cloudsync-provider/cloudsync-provider.common.ts","mappings":";;;AA2CA,oDAMC;AAeD,0BAYC;AA3ED,+EAA0E;AAC1E,oLAA8K;AAC9K,yMAAkM;AAElM,8KAAwK;AACxK,yMAAkM;AAClM,yMAAkM;AAClM,4MAAqM;AACrM,iLAA2K;AAC3K,iLAA2K;AAC3K,kNAA2M;AAC3M,uLAAiL;AACjL,2KAAqK;AACrK,iLAA2K;AAC3K,oLAA8K;AAC9K,oLAA8K;AAC9K,uLAAiL;AAEpK,QAAA,wBAAwB,GAAG,IAAI,GAAG,CAAyD;IACtG,CAAC,+CAAqB,CAAC,cAAc,EAAE,0DAA0B,CAAC;IAClE,CAAC,+CAAqB,CAAC,WAAW,EAAE,uEAAgC,CAAC;IACrE,CAAC,+CAAqB,CAAC,GAAG,EAAE,sDAAwB,CAAC;IACrD,CAAC,+CAAqB,CAAC,kBAAkB,EAAE,uEAAgC,CAAC;IAC5E,CAAC,+CAAqB,CAAC,WAAW,EAAE,uEAAgC,CAAC;IACrE,CAAC,+CAAqB,CAAC,YAAY,EAAE,yEAAiC,CAAC;IACvE,CAAC,+CAAqB,CAAC,IAAI,EAAE,wDAAyB,CAAC;IACvD,CAAC,+CAAqB,CAAC,IAAI,EAAE,wDAAyB,CAAC;IACvD,CAAC,+CAAqB,CAAC,cAAc,EAAE,6EAAmC,CAAC;IAC3E,CAAC,+CAAqB,CAAC,MAAM,EAAE,4DAA2B,CAAC;IAC3D,CAAC,+CAAqB,CAAC,QAAQ,EAAE,oDAAuB,CAAC;IACzD,CAAC,+CAAqB,CAAC,IAAI,EAAE,wDAAyB,CAAC;IACvD,CAAC,+CAAqB,CAAC,KAAK,EAAE,0DAA0B,CAAC;IACzD,CAAC,+CAAqB,CAAC,MAAM,EAAE,4DAA2B,CAAC;CAC5D,CAAC,CAAC;AAEU,QAAA,kBAAkB,GAAG;IAChC,+CAAqB,CAAC,GAAG;IACzB,+CAAqB,CAAC,OAAO;IAC7B,+CAAqB,CAAC,KAAK;IAC3B,+CAAqB,CAAC,MAAM;CAC7B,CAAC;AAEF,SAAgB,oBAAoB,CAAC,YAAmC;IACtE,IAAI,0BAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;QAC9C,OAAO,0DAA0B,CAAC;IACpC,CAAC;IAED,OAAO,gCAAwB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACpD,CAAC;AAED,6CAA6C;AAC7C,MAAM,cAAc,GAAG,cAAc,CAAC;AAEtC,6BAA6B;AAC7B,MAAM,YAAY,GAAG,YAAY,CAAC;AAElC;;;;;;GAMG;AACH,SAAgB,OAAO,CAAC,IAAY,EAAE,MAAgB;;IACpD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;IAE5B,IAAI,MAAM,GAAG,IAAI,CAAC;IAElB,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACvB,MAAM,GAAG,CAAA,MAAA,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,0CAAG,CAAC,CAAC;YACvC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAClE,CAAC,CAAC,GAAG,MAAM,MAAM,CAAC;IACtB,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/data-protection/cloudsync/cloudsync-wizard/steps/cloudsync-provider/cloudsync-provider.common.ts"],"sourcesContent":["import { Type } from 'ng-mocks';\nimport { CloudSyncProviderName } from 'app/enums/cloudsync-provider.enum';\nimport { AzureProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/azure-provider-form/azure-provider-form.component';\nimport { BackblazeB2ProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/backblaze-b2-provider-form/backblaze-b2-provider-form.component';\nimport { BaseProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/base-provider-form';\nimport { FtpProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/ftp-provider-form/ftp-provider-form.component';\nimport { GoogleCloudProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/google-cloud-provider-form/google-cloud-provider-form.component';\nimport { GoogleDriveProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/google-drive-provider-form/google-drive-provider-form.component';\nimport { GooglePhotosProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/google-photos-provider-form/google-photos-provider-form.component';\nimport { HttpProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/http-provider-form/http-provider-form.component';\nimport { MegaProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/mega-provider-form/mega-provider-form.component';\nimport { OpenstackSwiftProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/openstack-swift-provider-form/openstack-swift-provider-form.component';\nimport { PcloudProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/pcloud-provider-form/pcloud-provider-form.component';\nimport { S3ProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/s3-provider-form/s3-provider-form.component';\nimport { SftpProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/sftp-provider-form/sftp-provider-form.component';\nimport { StorjProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/storj-provider-form/storj-provider-form.component';\nimport { TokenProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/token-provider-form/token-provider-form.component';\nimport { WebdavProviderFormComponent } from 'app/pages/credentials/backup-credentials/cloud-credentials-form/provider-forms/webdav-provider-form/webdav-provider-form.component';\n\nexport const cloudsyncProviderFormMap = new Map<CloudSyncProviderName, Type<BaseProviderFormComponent>>([\n  [CloudSyncProviderName.MicrosoftAzure, AzureProviderFormComponent],\n  [CloudSyncProviderName.BackblazeB2, BackblazeB2ProviderFormComponent],\n  [CloudSyncProviderName.Ftp, FtpProviderFormComponent],\n  [CloudSyncProviderName.GoogleCloudStorage, GoogleCloudProviderFormComponent],\n  [CloudSyncProviderName.GoogleDrive, GoogleDriveProviderFormComponent],\n  [CloudSyncProviderName.GooglePhotos, GooglePhotosProviderFormComponent],\n  [CloudSyncProviderName.Http, HttpProviderFormComponent],\n  [CloudSyncProviderName.Mega, MegaProviderFormComponent],\n  [CloudSyncProviderName.OpenstackSwift, OpenstackSwiftProviderFormComponent],\n  [CloudSyncProviderName.Pcloud, PcloudProviderFormComponent],\n  [CloudSyncProviderName.AmazonS3, S3ProviderFormComponent],\n  [CloudSyncProviderName.Sftp, SftpProviderFormComponent],\n  [CloudSyncProviderName.Storj, StorjProviderFormComponent],\n  [CloudSyncProviderName.Webdav, WebdavProviderFormComponent],\n]);\n\nexport const tokenOnlyProviders = [\n  CloudSyncProviderName.Box,\n  CloudSyncProviderName.Dropbox,\n  CloudSyncProviderName.Hubic,\n  CloudSyncProviderName.Yandex,\n];\n\nexport function getProviderFormClass(providerName: CloudSyncProviderName): Type<BaseProviderFormComponent> {\n  if (tokenOnlyProviders.includes(providerName)) {\n    return TokenProviderFormComponent;\n  }\n\n  return cloudsyncProviderFormMap.get(providerName);\n}\n\n// Will return \"(1)\" from \"Google Photos (1)\"\nconst incrementRegex = /\\s\\((\\d+)\\)$/;\n\n// Will return \"1\" from \"(1)\"\nconst incrementInt = /\\d+(?=\\)$)/;\n\n/**\n * Get an incremented name (e.g. Google Photos (2)) from a name (e.g. Google Photos),\n * based on an array of existing names.\n *\n * @param name The name to increment.\n * @param others The array of existing names.\n */\nexport function getName(name: string, others: string[]): string {\n  const set = new Set(others);\n\n  let result = name;\n\n  while (set.has(result)) {\n    result = incrementRegex.exec(result)?.[1]\n      ? result.replace(incrementInt, (value) => (+value + 1).toString())\n      : `${result} (2)`;\n  }\n\n  return result;\n}\n"],"version":3}