f3dcf2510713e82f9efc90f50a6bb821
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.appContainerStateLabels = exports.AppContainerState = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
var AppContainerState;
(function (AppContainerState) {
    AppContainerState["Running"] = "running";
    AppContainerState["Starting"] = "starting";
    AppContainerState["Exited"] = "exited";
})(AppContainerState || (exports.AppContainerState = AppContainerState = {}));
exports.appContainerStateLabels = new Map([
    [AppContainerState.Running, (0, ngx_translate_extract_marker_1.marker)('Running')],
    [AppContainerState.Starting, (0, ngx_translate_extract_marker_1.marker)('Starting')],
    [AppContainerState.Exited, (0, ngx_translate_extract_marker_1.marker)('Exited')],
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,