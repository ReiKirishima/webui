{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/data-protection/cloud-backup/cloud-backup-form/cloud-backup-form.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/data-protection/cloud-backup/cloud-backup-form/cloud-backup-form.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit,\n} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Observable, debounceTime, distinctUntilChanged, map, of,\n  switchMap,\n} from 'rxjs';\nimport { CloudSyncProviderName } from 'app/enums/cloudsync-provider.enum';\nimport { ExplorerNodeType } from 'app/enums/explorer-type.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { prepareBwlimit } from 'app/helpers/bwlimit.utils';\nimport { buildNormalizedFileSize } from 'app/helpers/file-size.utils';\nimport { helptextCloudBackup } from 'app/helptext/data-protection/cloud-backup/cloud-backup';\nimport { CloudBackup, CloudBackupUpdate } from 'app/interfaces/cloud-backup.interface';\nimport { SelectOption, newOption } from 'app/interfaces/option.interface';\nimport { ExplorerNodeData, TreeNode } from 'app/interfaces/tree-node.interface';\nimport { TreeNodeProvider } from 'app/modules/forms/ix-forms/components/ix-explorer/tree-node-provider.interface';\nimport { ChainedRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/chained-component-ref';\nimport { FormErrorHandlerService } from 'app/modules/forms/ix-forms/services/form-error-handler.service';\nimport { crontabToSchedule } from 'app/modules/scheduler/utils/crontab-to-schedule.utils';\nimport { CronPresetValue } from 'app/modules/scheduler/utils/get-default-crontab-presets.utils';\nimport { scheduleToCrontab } from 'app/modules/scheduler/utils/schedule-to-crontab.utils';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { CloudCredentialService } from 'app/services/cloud-credential.service';\nimport { FilesystemService } from 'app/services/filesystem.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ntype FormValue = CloudBackupFormComponent['form']['value'];\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-cloud-backup-form',\n  templateUrl: './cloud-backup-form.component.html',\n  styleUrls: ['./cloud-backup-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CloudBackupFormComponent implements OnInit {\n  get isNew(): boolean {\n    return !this.editingTask;\n  }\n\n  get isNewBucketOptionSelected(): boolean {\n    return this.form.value.bucket === newOption;\n  }\n\n  get title(): string {\n    return this.isNew\n      ? this.translate.instant('Add TrueCloud Backup Task')\n      : this.translate.instant('Edit TrueCloud Backup Task');\n  }\n\n  protected readonly newBucketOption = {\n    label: this.translate.instant('Add new'),\n    value: newOption,\n    disabled: false,\n  };\n\n  form = this.fb.group({\n    path: ['', [Validators.required]],\n    credentials: [null as number, [Validators.required]],\n    schedule: [CronPresetValue.Daily, [Validators.required]],\n    exclude: [[] as string[]],\n    pre_script: [''],\n    post_script: [''],\n    description: ['', [Validators.required]],\n    snapshot: [false],\n    bwlimit: [[] as string[]],\n    transfers: [null as number],\n    args: [''],\n    enabled: [true],\n    password: ['', [Validators.required]],\n    keep_last: [null as number, [Validators.required]],\n\n    folder: ['', [Validators.required]],\n    bucket: ['', [Validators.required]],\n    bucket_input: ['', [Validators.required]],\n  });\n\n  isLoading = false;\n  editingTask: CloudBackup;\n\n  bucketOptions$ = of<SelectOption[]>([]);\n\n  fileNodeProvider: TreeNodeProvider;\n  bucketNodeProvider: TreeNodeProvider;\n\n  readonly newOption = newOption;\n  readonly requiredRoles = [Role.CloudBackupWrite];\n  protected readonly CloudSyncProviderName = CloudSyncProviderName;\n\n  readonly helptext = helptextCloudBackup;\n\n  constructor(\n    private translate: TranslateService,\n    private fb: FormBuilder,\n    private ws: WebSocketService,\n    private cdr: ChangeDetectorRef,\n    private errorHandler: FormErrorHandlerService,\n    private snackbar: SnackbarService,\n    private filesystemService: FilesystemService,\n    private cloudCredentialService: CloudCredentialService,\n    private chainedRef: ChainedRef<CloudBackup>,\n  ) {\n    this.editingTask = chainedRef.getData();\n  }\n\n  ngOnInit(): void {\n    this.setFileNodeProvider();\n    this.setBucketNodeProvider();\n\n    this.form.controls.credentials.valueChanges\n      .pipe(untilDestroyed(this))\n      .subscribe((credentialId) => {\n        if (credentialId !== this.editingTask?.credentials?.id) {\n          this.form.controls.bucket.patchValue('');\n        }\n\n        this.form.controls.bucket_input.disable();\n\n        if (credentialId) {\n          this.form.controls.folder.enable();\n          this.form.controls.bucket.enable();\n          this.loadBucketOptions(credentialId);\n        } else {\n          this.form.controls.folder.disable();\n          this.form.controls.bucket.disable();\n        }\n      });\n\n    this.form.controls.bucket.valueChanges\n      .pipe(untilDestroyed(this))\n      .subscribe((value) => {\n        if (value === newOption) {\n          this.form.controls.bucket_input.patchValue('');\n          this.form.controls.bucket_input.enable();\n        } else {\n          this.form.controls.bucket_input.disable();\n        }\n        this.setBucketNodeProvider();\n      });\n\n    this.form.controls.bucket_input.valueChanges\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        untilDestroyed(this),\n      )\n      .subscribe(() => {\n        this.setBucketNodeProvider();\n      });\n\n    if (this.editingTask) {\n      this.setTaskForEdit();\n    }\n  }\n\n  loadBucketOptions(credentialId: number): void {\n    this.isLoading = true;\n    this.cloudCredentialService.getBuckets(credentialId)\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (buckets) => {\n          const bucketOptions = buckets.map((bucket) => ({\n            label: bucket.Name,\n            value: bucket.Path,\n            disabled: !bucket.Enabled,\n          }));\n          bucketOptions.unshift(this.newBucketOption);\n          this.bucketOptions$ = of(bucketOptions);\n          this.isLoading = false;\n          this.form.controls.bucket.enable();\n          this.form.controls.bucket_input.disable();\n          this.cdr.markForCheck();\n        },\n        error: () => {\n          this.isLoading = false;\n          this.bucketOptions$ = of([this.newBucketOption]);\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  getBucketsNodeProvider(): TreeNodeProvider {\n    return (node: TreeNode<ExplorerNodeData>) => {\n      let bucket = '';\n      if (this.form.controls.bucket.enabled && this.form.value.bucket !== newOption) {\n        bucket = this.form.controls.bucket.value;\n      } else if (this.form.controls.bucket_input.enabled) {\n        bucket = this.form.controls.bucket_input.value;\n      }\n\n      const data = {\n        credentials: this.form.controls.credentials.value,\n        attributes: {\n          bucket,\n          folder: node.data.path,\n        },\n        args: '',\n      };\n\n      if (bucket === '') {\n        delete data.attributes.bucket;\n      }\n\n      return this.ws.call('cloudsync.list_directory', [data]).pipe(\n        map((listing) => {\n          const nodes: ExplorerNodeData[] = [];\n\n          listing.forEach((file) => {\n            if (file.IsDir) {\n              nodes.push({\n                path: `${data.attributes.folder}/${file.Name}`.replace(/\\/+/g, '/'),\n                name: file.Name,\n                type: ExplorerNodeType.Directory,\n                hasChildren: true,\n              });\n            }\n          });\n\n          return nodes;\n        }),\n      );\n    };\n  }\n\n  setTaskForEdit(): void {\n    this.form.patchValue({\n      ...this.editingTask,\n      schedule: scheduleToCrontab(this.editingTask.schedule) as CronPresetValue,\n      path: this.editingTask.path,\n      credentials: (this.editingTask.credentials).id,\n      folder: this.editingTask.attributes.folder as string,\n      bucket: this.editingTask.attributes.bucket === newOption ? '' : this.editingTask.attributes.bucket as string || '',\n      bwlimit: this.editingTask.bwlimit.map((bwlimit) => {\n        return bwlimit.bandwidth\n          ? `${bwlimit.time}, ${buildNormalizedFileSize(bwlimit.bandwidth, 'B', 2)}/s`\n          : `${bwlimit.time}, off`;\n      }),\n    });\n  }\n\n  onSubmit(): void {\n    const payload = this.prepareData(this.form.value);\n\n    this.isLoading = true;\n\n    let createBucket$: Observable<unknown> = of(null);\n    if (!!this.form.value.bucket_input && this.isNewBucketOptionSelected) {\n      createBucket$ = this.ws.call('cloudsync.create_bucket', [this.form.value.credentials, this.form.value.bucket_input]);\n    }\n\n    createBucket$.pipe(\n      switchMap(() => {\n        if (this.isNew) {\n          return this.ws.call('cloud_backup.create', [payload]);\n        }\n        return this.ws.call('cloud_backup.update', [this.editingTask.id, payload]);\n      }),\n      untilDestroyed(this),\n    ).subscribe({\n      next: (response: CloudBackup) => {\n        if (this.isNew) {\n          this.snackbar.success(this.translate.instant('Task created'));\n        } else {\n          this.snackbar.success(this.translate.instant('Task updated'));\n        }\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.chainedRef.close({ response, error: null });\n      },\n      error: (error: unknown) => {\n        this.isLoading = false;\n        this.errorHandler.handleWsFormError(error, this.form);\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  private prepareData(formValue: FormValue): CloudBackupUpdate {\n    const attributes: CloudBackupUpdate['attributes'] = {\n      folder: formValue.folder,\n      bucket: this.form.value.bucket_input && this.isNewBucketOptionSelected\n        ? this.form.value.bucket_input\n        : formValue.bucket,\n    };\n\n    const value: CloudBackupUpdate = {\n      ...formValue,\n      attributes,\n      include: [],\n      bwlimit: prepareBwlimit(formValue.bwlimit),\n      schedule: crontabToSchedule(formValue.schedule),\n    };\n\n    (['folder', 'bucket', 'bucket_input'] as const).forEach((key) => {\n      delete (value as unknown as FormValue)[key];\n    });\n\n    return value;\n  }\n\n  private setFileNodeProvider(): void {\n    this.fileNodeProvider = this.filesystemService.getFilesystemNodeProvider({ directoriesOnly: true });\n  }\n\n  private setBucketNodeProvider(): void {\n    this.bucketNodeProvider = this.getBucketsNodeProvider();\n  }\n}\n"],"version":3}