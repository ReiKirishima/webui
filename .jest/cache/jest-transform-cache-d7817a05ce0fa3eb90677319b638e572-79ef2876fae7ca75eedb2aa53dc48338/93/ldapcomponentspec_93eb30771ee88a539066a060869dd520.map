{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/directory-service/components/ldap/ldap.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/directory-service/components/ldap/ldap.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { of } from 'rxjs';\nimport { fakeSuccessfulJob } from 'app/core/testing/utils/fake-job.utils';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockCall, mockJob, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { helptextLdap } from 'app/helptext/directory-service/ldap';\nimport { KerberosRealm } from 'app/interfaces/kerberos-realm.interface';\nimport { LdapConfig } from 'app/interfaces/ldap-config.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport {\n  WithManageCertificatesLinkComponent,\n} from 'app/modules/forms/ix-forms/components/with-manage-certificates-link/with-manage-certificates-link.component';\nimport { IxFormHarness } from 'app/modules/forms/ix-forms/testing/ix-form.harness';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { LdapComponent } from 'app/pages/directory-service/components/ldap/ldap.component';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ndescribe('LdapComponent', () => {\n  let spectator: Spectator<LdapComponent>;\n  let loader: HarnessLoader;\n  let form: IxFormHarness;\n  const existingLdapConfig = {\n    hostname: ['ldap.truenas.com', 'ldap.freenas.org'],\n    basedn: 'dc=test,dc=org',\n    binddn: 'cn=Manager,dc=test',\n    bindpw: '12345678',\n    enable: true,\n    anonbind: false,\n    ssl: 'START_TLS',\n    certificate: 1,\n    validate_certificates: true,\n    disable_freenas_cache: true,\n    kerberos_realm: 1,\n    kerberos_principal: 'principal1',\n    timeout: 10,\n    dns_timeout: 15,\n    auxiliary_parameters: 'param=25',\n    schema: 'RFC2307',\n  } as LdapConfig;\n\n  const createComponent = createComponentFactory({\n    component: LdapComponent,\n    imports: [\n      ReactiveFormsModule,\n      WithManageCertificatesLinkComponent,\n    ],\n    providers: [\n      mockWebSocket([\n        mockJob('ldap.update', fakeSuccessfulJob()),\n        mockCall('ldap.config', existingLdapConfig),\n        mockCall('kerberos.keytab.kerberos_principal_choices', [\n          'principal1', 'principal2',\n        ]),\n        mockCall('ldap.ssl_choices', ['OFF', 'START_TLS']),\n        mockCall('ldap.schema_choices', ['RFC2307', 'RFC2307BIS']),\n        mockCall('kerberos.realm.query', [\n          { id: 1, realm: 'Realm 1' },\n          { id: 2, realm: 'Realm 2' },\n        ] as KerberosRealm[]),\n      ]),\n      mockProvider(IxSlideInService),\n      mockProvider(SystemGeneralService, {\n        refreshDirServicesCache: jest.fn(() => of(null)),\n        getCertificates: () => of([\n          { id: 1, name: 'certificate1' },\n          { id: 2, name: 'certificate2' },\n        ]),\n      }),\n      mockProvider(DialogService, {\n        jobDialog: jest.fn(() => ({\n          afterClosed: () => of({}),\n        })),\n      }),\n      mockProvider(SnackbarService),\n      mockProvider(IxSlideInRef),\n      mockAuth(),\n      { provide: SLIDE_IN_DATA, useValue: undefined },\n    ],\n  });\n\n  beforeEach(async () => {\n    spectator = createComponent();\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n    form = await loader.getHarness(IxFormHarness);\n  });\n\n  it('loads LDAP config and shows it', async () => {\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('ldap.config');\n\n    const values = await form.getValues();\n    expect(values).toEqual({\n      Hostname: ['ldap.truenas.com', 'ldap.freenas.org'],\n      'Base DN': 'dc=test,dc=org',\n      'Bind DN': 'cn=Manager,dc=test',\n      'Bind Password': '12345678',\n      Enable: true,\n    });\n  });\n\n  it('shows advanced LDAP when Advanced Mode is pressed', async () => {\n    const advancedModeButton = await loader.getHarness(MatButtonHarness.with({ text: 'Advanced Options' }));\n    await advancedModeButton.click();\n\n    const values = await form.getValues();\n    expect(values).toEqual({\n      Hostname: ['ldap.truenas.com', 'ldap.freenas.org'],\n      'Base DN': 'dc=test,dc=org',\n      'Bind DN': 'cn=Manager,dc=test',\n      'Bind Password': '12345678',\n      Enable: true,\n\n      'Allow Anonymous Binding': false,\n      'Encryption Mode': 'START_TLS',\n      Certificate: 'certificate1',\n      'Validate Certificates': true,\n      'Disable LDAP User/Group Cache': true,\n\n      'Kerberos Realm': 'Realm 1',\n      'Kerberos Principal': 'principal1',\n      'LDAP Timeout': '10',\n      'DNS Timeout': '15',\n      'Auxiliary Parameters': 'param=25',\n      Schema: 'RFC2307',\n    });\n  });\n\n  it('rebuilds cache when Rebuild Cache button is pressed', async () => {\n    const rebuildCacheButton = await loader.getHarness(MatButtonHarness.with({ text: 'Rebuild Directory Service Cache' }));\n    await rebuildCacheButton.click();\n\n    expect(spectator.inject(DialogService).jobDialog).toHaveBeenCalled();\n    expect(spectator.inject(SnackbarService).success).toHaveBeenCalledWith(\n      helptextLdap.ldap_custactions_clearcache_dialog_message,\n    );\n  });\n\n  it('saves LDAP config when form is submitted', async () => {\n    const advancedModeButton = await loader.getHarness(MatButtonHarness.with({ text: 'Advanced Options' }));\n    await advancedModeButton.click();\n\n    await form.fillForm({\n      'Bind Password': 'adminadmin',\n      'Allow Anonymous Binding': true,\n      'Kerberos Principal': 'principal2',\n    });\n\n    const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n    await saveButton.click();\n\n    expect(spectator.inject(DialogService).jobDialog).toHaveBeenCalledWith(\n      'ldap.update',\n      [{\n        ...existingLdapConfig,\n        bindpw: 'adminadmin',\n        anonbind: true,\n        kerberos_principal: 'principal2',\n      }],\n    );\n    expect(spectator.inject(DialogService).jobDialog).toHaveBeenCalled();\n    expect(spectator.inject(IxSlideInRef).close).toHaveBeenCalled();\n  });\n});\n"],"version":3}