{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/directory-service/components/active-directory/active-directory.component.ts","mappings":";;;;;;;;;AAAA,4CAA4C;AAC5C,wCAEuB;AACvB,0CAAiE;AACjE,qDAAqD;AACrD,iDAAiE;AACjE,qDAAqD;AACrD,2DAAqD;AACrD,yDAAqE;AACrE,8CAAwE;AACxE,+BAA4C;AAC5C,8CAAqC;AACrC,qGAAgG;AAChG,yFAA+E;AAC/E,mDAA2C;AAC3C,+EAA+E;AAC/E,sFAA0F;AAE1F,sEAAkE;AAClE,sHAAiH;AACjH,mHAA8G;AAC9G,0GAAqG;AACrG,mHAA8G;AAC9G,0GAAqG;AACrG,6GAAwG;AACxG,sJAAgJ;AAChJ,uGAAiG;AACjG,qFAAiF;AACjF,uEAAmE;AACnE,4IAEkG;AAClG,8EAAyE;AACzE,gFAA2E;AAC3E,wDAA2D;AA2BpD,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IA2CnC,YACU,EAAoB,EACpB,GAAsB,EACtB,YAAiC,EACjC,WAAwB,EACxB,oBAA0C,EAC1C,aAA4B,EAC5B,SAAoB,EACpB,SAA2B,EAC3B,UAAkD,EAClD,eAAgC;QAThC,OAAE,GAAF,EAAE,CAAkB;QACpB,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAkB;QAC3B,eAAU,GAAV,UAAU,CAAwC;QAClD,oBAAe,GAAf,eAAe,CAAiB;QApDvB,kBAAa,GAAG,CAAC,gBAAI,CAAC,qBAAqB,CAAC,CAAC;QAEhE,cAAS,GAAG,KAAK,CAAC;QAClB,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QAEvB,SAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,UAAU,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,eAAe,EAAE,CAAC,KAAK,CAAC;YACxB,kBAAkB,EAAE,CAAC,KAAK,CAAC;YAC3B,kBAAkB,EAAE,CAAC,KAAK,CAAC;YAC3B,iBAAiB,EAAE,CAAC,KAAK,CAAC;YAC1B,qBAAqB,EAAE,CAAC,KAAK,CAAC;YAC9B,YAAY,EAAE,CAAC,KAAK,CAAC;YACrB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,cAAc,EAAE,CAAC,IAAc,CAAC;YAChC,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,OAAO,EAAE,CAAC,IAAc,CAAC;YACzB,WAAW,EAAE,CAAC,IAAc,CAAC;YAC7B,QAAQ,EAAE,CAAC,IAAmB,CAAC;YAC/B,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,YAAY,EAAE,CAAC,EAAc,CAAC;SAC/B,CAAC,CAAC;QAEH,0BAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAEvE,aAAQ,GAAG,0CAAuB,CAAC;QACnC,oBAAe,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAClE,IAAA,eAAG,EAAC,CAAC,MAAM,EAAE,EAAE;YACb,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC5B,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,KAAK,EAAE,KAAK,CAAC,EAAE;aAChB,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CACH,CAAC;QACO,wBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC,IAAI,CAAC,IAAA,wCAAoB,GAAE,CAAC,CAAC;QAC9G,gBAAW,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC,IAAI,CAAC,IAAA,wCAAoB,GAAE,CAAC,CAAC;IAalG,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa;aACf,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,EAAE,CAAC;aAC9D,WAAW,EAAE;aACb,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACpC,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE;gBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,eAAe,CAAC,OAAO,CAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CACpB,WAAW,IAAI,0CAAuB,CAAC,qDAAqD,CAC7F,CACF,CAAC;gBACF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,CAAC,KAAc,EAAE,EAAE;gBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0DAA0B,CAAC,CAAC;QAC/D,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YACvE,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,OAAO;YACT,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,MAAM,MAAM,mCACP,IAAI,CAAC,IAAI,CAAC,KAAK,KAClB,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,EAAE,GAC7D,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,SAAS,CAC1B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,wBAAwB,EAAE,CAAC,MAAM,CAAC,CAAC,EAC/C,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,CACtD;aACE,WAAW,EAAE;aACb,IAAI,CACH,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAC9B,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB;aACA,SAAS,CAAC;YACT,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;YACvC,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAA,eAAQ,EAAC;YACP,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,mBAAmB,EAAE;SAC3B,CAAC;aACC,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC;aAC1B,SAAS,CAAC;YACT,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,CAAC,KAAc,EAAE,EAAE;gBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;gBACxB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAChE,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAEO,kBAAkB;QACxB,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,IAAI,CACrD,IAAA,eAAG,EAAC,CAAC,OAAO,EAAE,EAAE;YACd,MAAM,SAAS,GAAG,OAAO,CAAC,eAAe,KAAK,oDAAqB,CAAC,OAAO,CAAC;YAC5E,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;YAEhC,IAAI,SAAS,EAAE,CAAC;gBACd,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5C,CAAC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,mBAAmB;QACzB,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAChD,IAAA,eAAG,EAAC,CAAC,MAAM,EAAE,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;AApKU,4DAAwB;;;;;;;;;;;;;mCAAxB,wBAAwB;IAzBpC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,sDAAgD;QAEhD,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,kDAAsB;YACtB,cAAO;YACP,qBAAc;YACd,2BAAmB;YACnB,2CAAmB;YACnB,qCAAgB;YAChB,2CAAmB;YACnB,uCAAiB;YACjB,qCAAgB;YAChB,6CAAoB;YACpB,iDAAsB;YACtB,kBAAS;YACT,8BAAa;YACb,sBAAe;YACf,kBAAS;SACV;KACF,CAAC;GACW,wBAAwB,CAqKpC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/directory-service/components/active-directory/active-directory.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit,\n} from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { DirectoryServiceState } from 'app/enums/directory-service-state.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { singleArrayToOptions } from 'app/helpers/operators/options.operators';\nimport { helptextActiveDirectory } from 'app/helptext/directory-service/active-directory';\nimport { NssInfoType } from 'app/interfaces/active-directory.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { FormActionsComponent } from 'app/modules/forms/ix-forms/components/form-actions/form-actions.component';\nimport { IxCheckboxComponent } from 'app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component';\nimport { IxChipsComponent } from 'app/modules/forms/ix-forms/components/ix-chips/ix-chips.component';\nimport { IxFieldsetComponent } from 'app/modules/forms/ix-forms/components/ix-fieldset/ix-fieldset.component';\nimport { IxInputComponent } from 'app/modules/forms/ix-forms/components/ix-input/ix-input.component';\nimport { IxSelectComponent } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { IxModalHeaderComponent } from 'app/modules/forms/ix-forms/components/ix-slide-in/components/ix-modal-header/ix-modal-header.component';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport {\n  LeaveDomainDialogComponent,\n} from 'app/pages/directory-service/components/leave-domain-dialog/leave-domain-dialog.component';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-active-directory',\n  templateUrl: './active-directory.component.html',\n  styleUrls: ['./active-directory.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxModalHeaderComponent,\n    MatCard,\n    MatCardContent,\n    ReactiveFormsModule,\n    IxFieldsetComponent,\n    IxInputComponent,\n    IxCheckboxComponent,\n    IxSelectComponent,\n    IxChipsComponent,\n    FormActionsComponent,\n    RequiresRolesDirective,\n    MatButton,\n    TestDirective,\n    TranslateModule,\n    AsyncPipe,\n  ],\n})\nexport class ActiveDirectoryComponent implements OnInit {\n  protected readonly requiredRoles = [Role.DirectoryServiceWrite];\n\n  isLoading = false;\n  isAdvancedMode = false;\n  canLeaveDomain = false;\n\n  form = this.formBuilder.group({\n    domainname: ['', Validators.required],\n    bindname: ['', Validators.required],\n    bindpw: [''],\n    enable: [false],\n    verbose_logging: [false],\n    allow_trusted_doms: [false],\n    use_default_domain: [false],\n    allow_dns_updates: [false],\n    disable_freenas_cache: [false],\n    restrict_pam: [false],\n    site: [''],\n    kerberos_realm: [null as number],\n    kerberos_principal: [''],\n    createcomputer: [''],\n    timeout: [null as number],\n    dns_timeout: [null as number],\n    nss_info: [null as NssInfoType],\n    netbiosname: ['', [Validators.required, Validators.maxLength(15)]],\n    netbiosalias: [[] as string[]],\n  });\n\n  hasKerberosPrincipal$ = this.form.select((values) => values.kerberos_principal);\n\n  readonly helptext = helptextActiveDirectory;\n  readonly kerberosRealms$ = this.ws.call('kerberos.realm.query').pipe(\n    map((realms) => {\n      return realms.map((realm) => ({\n        label: realm.realm,\n        value: realm.id,\n      }));\n    }),\n  );\n  readonly kerberosPrincipals$ = this.ws.call('kerberos.keytab.kerberos_principal_choices').pipe(singleArrayToOptions());\n  readonly nssOptions$ = this.ws.call('activedirectory.nss_info_choices').pipe(singleArrayToOptions());\n\n  constructor(\n    private ws: WebSocketService,\n    private cdr: ChangeDetectorRef,\n    private errorHandler: ErrorHandlerService,\n    private formBuilder: FormBuilder,\n    private systemGeneralService: SystemGeneralService,\n    private dialogService: DialogService,\n    private matDialog: MatDialog,\n    private translate: TranslateService,\n    private slideInRef: IxSlideInRef<ActiveDirectoryComponent>,\n    private snackbarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadFormValues();\n  }\n\n  onAdvancedModeToggled(): void {\n    this.isAdvancedMode = !this.isAdvancedMode;\n  }\n\n  onRebuildCachePressed(): void {\n    this.isLoading = true;\n    this.dialogService\n      .jobDialog(this.systemGeneralService.refreshDirServicesCache())\n      .afterClosed()\n      .pipe(untilDestroyed(this)).subscribe({\n        next: ({ description }) => {\n          this.isLoading = false;\n          this.snackbarService.success(\n            this.translate.instant(\n              description || helptextActiveDirectory.activedirectory_custactions_clearcache_dialog_message,\n            ),\n          );\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.dialogService.error(this.errorHandler.parseError(error));\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  onLeaveDomainPressed(): void {\n    const dialog = this.matDialog.open(LeaveDomainDialogComponent);\n    dialog.afterClosed().pipe(untilDestroyed(this)).subscribe((leftDomain) => {\n      if (!leftDomain) {\n        return;\n      }\n\n      this.slideInRef.close();\n    });\n  }\n\n  onSubmit(): void {\n    this.isLoading = true;\n    const values = {\n      ...this.form.value,\n      kerberos_principal: this.form.value.kerberos_principal || '',\n    };\n\n    this.dialogService.jobDialog(\n      this.ws.job('activedirectory.update', [values]),\n      { title: this.translate.instant('Active Directory') },\n    )\n      .afterClosed()\n      .pipe(\n        this.errorHandler.catchError(),\n        untilDestroyed(this),\n      )\n      .subscribe({\n        next: () => this.slideInRef.close(true),\n        complete: () => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  private loadFormValues(): void {\n    this.isLoading = true;\n\n    forkJoin([\n      this.loadDirectoryState(),\n      this.loadDirectoryConfig(),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.dialogService.error(this.errorHandler.parseError(error));\n        },\n      });\n  }\n\n  private loadDirectoryState(): Observable<void> {\n    return this.ws.call('directoryservices.get_state').pipe(\n      map((adState) => {\n        const isHealthy = adState.activedirectory === DirectoryServiceState.Healthy;\n        this.canLeaveDomain = isHealthy;\n\n        if (isHealthy) {\n          this.form.controls.netbiosname.disable();\n          this.form.controls.netbiosalias.disable();\n        }\n      }),\n    );\n  }\n\n  private loadDirectoryConfig(): Observable<void> {\n    return this.ws.call('activedirectory.config').pipe(\n      map((config) => {\n        this.form.patchValue(config);\n      }),\n    );\n  }\n}\n"],"version":3}