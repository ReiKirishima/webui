4f6a0142169c730c160a67bca4f67194
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.choicesToOptions = choicesToOptions;
exports.arrayToOptions = arrayToOptions;
exports.singleArrayToOptions = singleArrayToOptions;
exports.redundantListToUniqueOptions = redundantListToUniqueOptions;
exports.idNameArrayToOptions = idNameArrayToOptions;
const lodash_es_1 = require("lodash-es");
const operators_1 = require("rxjs/operators");
/**
 * Convert choices to options
 * @returns Option[]
 */
function choicesToOptions() {
    return (0, operators_1.map)((choices) => {
        return Object.entries(choices).map(([value, label]) => ({ label, value }));
    });
}
function arrayToOptions() {
    return (0, operators_1.map)((choices) => {
        return choices.map(([value, label]) => ({ label, value }));
    });
}
function singleArrayToOptions() {
    return (0, operators_1.map)((choices) => {
        return choices.map((choice) => ({ label: String(choice), value: choice }));
    });
}
function redundantListToUniqueOptions() {
    return (0, operators_1.map)((redundantArray) => {
        return (0, lodash_es_1.uniq)(redundantArray).map((item) => ({ label: item, value: item }));
    });
}
function idNameArrayToOptions() {
    return (0, operators_1.map)((options) => {
        return options.map((option) => ({ label: option.name, value: option.id }));
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2hlbHBlcnMvb3BlcmF0b3JzL29wdGlvbnMub3BlcmF0b3JzLnRzIiwibWFwcGluZ3MiOiI7O0FBVUEsNENBSUM7QUFFRCx3Q0FJQztBQUVELG9EQUlDO0FBRUQsb0VBSUM7QUFFRCxvREFJQztBQXRDRCx5Q0FBaUM7QUFFakMsOENBQXFDO0FBSXJDOzs7R0FHRztBQUNILFNBQWdCLGdCQUFnQjtJQUM5QixPQUFPLElBQUEsZUFBRyxFQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDckIsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM3RSxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxTQUFnQixjQUFjO0lBQzVCLE9BQU8sSUFBQSxlQUFHLEVBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUNyQixPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0QsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsU0FBZ0Isb0JBQW9CO0lBQ2xDLE9BQU8sSUFBQSxlQUFHLEVBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUNyQixPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0UsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsU0FBZ0IsNEJBQTRCO0lBQzFDLE9BQU8sSUFBQSxlQUFHLEVBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBRTtRQUM1QixPQUFPLElBQUEsZ0JBQUksRUFBQyxjQUFjLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFZLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEYsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsU0FBZ0Isb0JBQW9CO0lBQ2xDLE9BQU8sSUFBQSxlQUFHLEVBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUNyQixPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM3RSxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2hlbHBlcnMvb3BlcmF0b3JzL29wdGlvbnMub3BlcmF0b3JzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVuaXEgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgT3BlcmF0b3JGdW5jdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQ2hvaWNlcyB9IGZyb20gJ2FwcC9pbnRlcmZhY2VzL2Nob2ljZXMuaW50ZXJmYWNlJztcbmltcG9ydCB7IE1hcE9wdGlvbiwgT3B0aW9uIH0gZnJvbSAnYXBwL2ludGVyZmFjZXMvb3B0aW9uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQ29udmVydCBjaG9pY2VzIHRvIG9wdGlvbnNcbiAqIEByZXR1cm5zIE9wdGlvbltdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjaG9pY2VzVG9PcHRpb25zKCk6IE9wZXJhdG9yRnVuY3Rpb248Q2hvaWNlcywgT3B0aW9uW10+IHtcbiAgcmV0dXJuIG1hcCgoY2hvaWNlcykgPT4ge1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhjaG9pY2VzKS5tYXAoKFt2YWx1ZSwgbGFiZWxdKSA9PiAoeyBsYWJlbCwgdmFsdWUgfSkpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFycmF5VG9PcHRpb25zKCk6IE9wZXJhdG9yRnVuY3Rpb248TWFwT3B0aW9uW10sIE9wdGlvbltdPiB7XG4gIHJldHVybiBtYXAoKGNob2ljZXMpID0+IHtcbiAgICByZXR1cm4gY2hvaWNlcy5tYXAoKFt2YWx1ZSwgbGFiZWxdKSA9PiAoeyBsYWJlbCwgdmFsdWUgfSkpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNpbmdsZUFycmF5VG9PcHRpb25zKCk6IE9wZXJhdG9yRnVuY3Rpb248KHN0cmluZyB8IG51bWJlcilbXSwgT3B0aW9uW10+IHtcbiAgcmV0dXJuIG1hcCgoY2hvaWNlcykgPT4ge1xuICAgIHJldHVybiBjaG9pY2VzLm1hcCgoY2hvaWNlKSA9PiAoeyBsYWJlbDogU3RyaW5nKGNob2ljZSksIHZhbHVlOiBjaG9pY2UgfSkpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlZHVuZGFudExpc3RUb1VuaXF1ZU9wdGlvbnMoKTogT3BlcmF0b3JGdW5jdGlvbjxzdHJpbmdbXSwgT3B0aW9uW10+IHtcbiAgcmV0dXJuIG1hcCgocmVkdW5kYW50QXJyYXkpID0+IHtcbiAgICByZXR1cm4gdW5pcShyZWR1bmRhbnRBcnJheSkubWFwKChpdGVtOiBzdHJpbmcpID0+ICh7IGxhYmVsOiBpdGVtLCB2YWx1ZTogaXRlbSB9KSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaWROYW1lQXJyYXlUb09wdGlvbnM8VCA9IG51bWJlcj4oKTogT3BlcmF0b3JGdW5jdGlvbjx7IGlkOiBUOyBuYW1lOiBzdHJpbmcgfVtdLCBPcHRpb248VD5bXT4ge1xuICByZXR1cm4gbWFwKChvcHRpb25zKSA9PiB7XG4gICAgcmV0dXJuIG9wdGlvbnMubWFwKChvcHRpb24pID0+ICh7IGxhYmVsOiBvcHRpb24ubmFtZSwgdmFsdWU6IG9wdGlvbi5pZCB9KSk7XG4gIH0pO1xufVxuIl0sInZlcnNpb24iOjN9