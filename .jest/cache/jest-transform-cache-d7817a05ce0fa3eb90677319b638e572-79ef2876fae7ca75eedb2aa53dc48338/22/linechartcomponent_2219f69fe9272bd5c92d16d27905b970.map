{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/reports-dashboard/components/line-chart/line-chart.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/reports-dashboard/components/line-chart/line-chart.component.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy, output,\n} from '@angular/core';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { UUID } from 'angular2-uuid';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport Dygraph, { dygraphs } from 'dygraphs';\nimport { Gb, kb, Mb } from 'app/constants/bits.constant';\nimport {\n  GiB, KiB, MiB, TiB,\n} from 'app/constants/bytes.constant';\nimport { ReportingGraphName } from 'app/enums/reporting.enum';\nimport { buildNormalizedFileSize, normalizeFileSize } from 'app/helpers/file-size.utils';\nimport { ReportingData } from 'app/interfaces/reporting.interface';\nimport { IxSimpleChanges } from 'app/interfaces/simple-changes.interface';\nimport { Theme } from 'app/interfaces/theme.interface';\nimport { Report, LegendDataWithStackedTotalHtml } from 'app/pages/reports-dashboard/interfaces/report.interface';\nimport { ReportsService } from 'app/pages/reports-dashboard/reports.service';\nimport { PlotterService } from 'app/pages/reports-dashboard/services/plotter.service';\nimport { ThemeService } from 'app/services/theme/theme.service';\n\ninterface Conversion {\n  value: number;\n  prefix?: string;\n  suffix?: string;\n  shortName?: string;\n}\n\n// TODO: Untie from reporting and move to a separate module.\n@Component({\n  selector: 'ix-linechart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LineChartComponent implements AfterViewInit, OnDestroy, OnChanges {\n  @ViewChild('wrapper', { static: true }) el: ElementRef<HTMLElement>;\n  @Input() chartId: string;\n  @Input() chartColors: string[];\n  @Input() data: ReportingData;\n  @Input() report: Report;\n  @Input() title: string;\n  @Input() timezone: string;\n  @Input() stacked = false;\n\n  @Input() legends?: string[];\n  @Input() type = 'line';\n  @Input() labelY?: string = 'Label Y';\n\n  lastMinDate: number;\n  lastMaxDate: number;\n\n  chart: Dygraph;\n\n  units = '';\n  yLabelPrefix: string;\n\n  theme: Theme;\n  timeFormat = '%H:%M';\n  controlUid = `chart_${UUID.UUID()}`;\n\n  readonly zoomChange = output<number[]>();\n\n  constructor(\n    public themeService: ThemeService,\n    private reportsService: ReportsService,\n    private plotterService: PlotterService,\n  ) {}\n\n  render(update?: boolean): void {\n    this.renderGraph(update);\n  }\n\n  renderGraph(update?: boolean): void {\n    if (!this.data?.legend?.length) {\n      return;\n    }\n\n    const data = this.makeTimeAxis(this.data);\n    const labels = data.shift();\n    const fg2 = this.themeService.currentTheme().fg2;\n    const gridLineColor = new TinyColor(fg2).setAlpha(0.25).toRgbString();\n\n    const options: dygraphs.Options = {\n      animatedZooms: true,\n      drawPoints: false, // Must be disabled for smoothPlotter\n      pointSize: 1,\n      includeZero: true,\n      highlightCircleSize: 4,\n      strokeWidth: 1,\n      colors: this.chartColors,\n      labels, // time axis\n      ylabel: this.formatAxisName(),\n      gridLineColor,\n      showLabelsOnHighlight: false,\n      labelsSeparateLines: true,\n      axes: {\n        y: {\n          yRangePad: 24,\n          axisLabelFormatter: this.axisLabelFormatter.bind(this),\n        },\n      },\n      legendFormatter: this.legendFormatter.bind(this),\n      series: this.series.bind(this),\n      drawCallback: this.drawCallback.bind(this),\n      zoomCallback: this.zoomCallback.bind(this),\n      stackedGraph: this.stacked,\n    } as unknown as dygraphs.Options;\n\n    if (update) {\n      this.chart.updateOptions(options);\n    } else {\n      this.chart = new Dygraph(this.el.nativeElement, data, options);\n    }\n  }\n\n  // TODO: Line chart should be dumber and should not care about timezones.\n  protected makeTimeAxis(rd: ReportingData): dygraphs.DataArray {\n    const rowData = rd.data as number[][];\n\n    const newRows = rowData.map((row, index) => {\n      // replace unix timestamp in first column with date\n      const convertedDate = utcToZonedTime(row[0] * 1000, this.timezone);\n\n      if (index === 0) { this.lastMinDate = convertedDate.getTime(); }\n      if (index === rowData.length - 1) { this.lastMaxDate = convertedDate.getTime(); }\n\n      return [convertedDate, ...row.slice(1)];\n    });\n\n    return [\n      ['x', ...rd.legend],\n      ...newRows,\n    ] as unknown as dygraphs.DataArray;\n  }\n\n  inferUnits(label: string): string {\n    // Figures out from the label what the unit is\n    let units = label;\n    switch (true) {\n      case label.toLowerCase().includes('percentage'):\n      case label.includes('%'):\n        units = '%';\n        break;\n      case label.toLowerCase().includes('celsius'):\n      case label.includes('°'):\n        units = '°';\n        break;\n      case label.toLowerCase().includes('mebibytes'):\n        units = 'mebibytes';\n        break;\n      case label.toLowerCase().includes('kilobits'):\n        units = 'kilobits';\n        break;\n      case label.toLowerCase().includes('kibibytes'):\n        units = 'kibibytes';\n        break;\n      case label.toLowerCase().includes('bytes'):\n        units = 'bytes';\n        break;\n      case label.toLowerCase().includes('bits'):\n        units = 'bits';\n        break;\n    }\n\n    if (typeof units === 'undefined') {\n      console.warn('Could not infer units from ' + this.labelY);\n    }\n\n    return units;\n  }\n\n  formatAxisName(): string {\n    if (this.report.name === ReportingGraphName.NetworkInterface) {\n      return this.yLabelPrefix + '/s';\n    }\n    switch (true) {\n      case this.labelY.toLowerCase() === 'seconds':\n        return 'Days';\n      case this.labelY.toLowerCase().includes('bits/s'):\n        return `${this.yLabelPrefix}bits/s`;\n      case this.labelY.toLowerCase().includes('bytes/s'):\n        return `${this.yLabelPrefix}bytes/s`;\n      case this.labelY.toLowerCase().includes('bytes'):\n        return `${this.yLabelPrefix}bytes`;\n      case this.labelY.toLowerCase().includes('bits'):\n        return `${this.yLabelPrefix}bits`;\n      default:\n        return this.labelY;\n    }\n  }\n\n  formatLabelValue(value: number, units: string, fixed?: number, prefixRules?: boolean, axis = false): Conversion {\n    const day = 60 * 60 * 24;\n    let result: Conversion = { value };\n    if (!fixed) { fixed = -1; }\n    if (typeof value !== 'number') { return value; }\n\n    switch (units.toLowerCase()) {\n      case 'seconds':\n        result = { value: value / day, shortName: ' days' };\n        break;\n      case 'kilobits':\n        result = this.convertKmgt(value * 1000, 'bits', fixed, prefixRules);\n        if (axis) {\n          result.value = this.getValueForAxis(value * 1000, result.prefix);\n        }\n        break;\n      case 'mebibytes':\n        result = this.convertKmgt(value * MiB, 'bytes', fixed, prefixRules);\n        if (axis) {\n          result.value = this.getValueForAxis(value * 1000 * 1000, result.prefix);\n        }\n        break;\n      case 'kibibytes':\n        result = this.convertKmgt(value * KiB, 'bytes', fixed, prefixRules);\n        if (axis) {\n          result.value = this.getValueForAxis(value * 1000, result.prefix);\n        }\n        break;\n      case 'bits':\n      case 'bytes':\n        result = this.convertKmgt(value, units.toLowerCase(), fixed, prefixRules);\n        if (axis) {\n          result.value = this.getValueForAxis(value, result.prefix);\n        }\n        break;\n      case '%':\n      case '°':\n      default:\n        result = this.convertByKilo(value);\n        break;\n    }\n\n    return result;\n  }\n\n  convertByKilo(value: number): Conversion {\n    if (typeof value !== 'number') { return value; }\n    let newValue = value;\n    let suffix = '';\n\n    if (value >= 1000000) {\n      newValue = value / 1000000;\n      suffix = 'm';\n    } else if (value < 1000000 && value >= 1000) {\n      newValue = value / 1000;\n      suffix = 'k';\n    }\n\n    return { value: newValue, suffix };\n  }\n\n  limitDecimals(numero: number): string | number {\n    if (numero < 1024) {\n      return Number(numero.toString().slice(0, 4));\n    }\n    return Math.round(numero);\n  }\n\n  axisLabelFormatter = (numero: number): string => {\n    if (this.report?.name === ReportingGraphName.NetworkInterface) {\n      if (numero < Mb) {\n        if (this.yLabelPrefix === 'Gb') {\n          numero /= Gb;\n        }\n        if (this.yLabelPrefix === 'Mb') {\n          numero /= Mb;\n        }\n        if (this.yLabelPrefix === 'kb') {\n          numero /= kb;\n        }\n      }\n      const [formatted] = normalizeFileSize(numero * 1000, 'b', 10);\n      return formatted.toString();\n    }\n    const converted = this.formatLabelValue(numero, this.inferUnits(this.labelY), 1, true, true);\n    const suffix = converted.suffix ? converted.suffix : '';\n    return `${this.limitDecimals(converted.value)}${suffix}`;\n  };\n\n  series = (): Record<string, { plotter: unknown }> => {\n    const series: Record<string, { plotter: unknown }> = {};\n    this.data.legend.forEach((item) => {\n      series[item] = { plotter: this.plotterService.getSmoothPlotter() };\n    });\n\n    return series;\n  };\n\n  getSuffix = (converted: Conversion): string => {\n    if (converted.shortName !== undefined) {\n      return converted.shortName;\n    }\n\n    return converted.suffix !== undefined ? converted.suffix : '';\n  };\n\n  legendFormatter = (legend: dygraphs.LegendData): string => {\n    const clone = { ...legend, chartId: this.chartId } as LegendDataWithStackedTotalHtml;\n    clone.series.forEach((item: dygraphs.SeriesLegendData, index: number): void => {\n      if (!item.y) { return; }\n      if (this.report.name === ReportingGraphName.NetworkInterface) {\n        clone.series[index].yHTML = buildNormalizedFileSize(item.y * 1000, 'b', 10) + '/s';\n      } else {\n        const yConverted = this.formatLabelValue(item.y, this.inferUnits(this.labelY), 1, true);\n        const ySuffix = this.getSuffix(yConverted);\n        clone.series[index].yHTML = `${this.limitDecimals(yConverted.value)} ${ySuffix}`;\n        if (this.labelY.endsWith('/s')) {\n          clone.series[index].yHTML += '/s';\n        }\n        if (!clone.stackedTotal) {\n          clone.stackedTotal = 0;\n        }\n        clone.stackedTotal += item.y;\n        if (clone.stackedTotal >= 0) {\n          const stackedTotalConverted = this.formatLabelValue(\n            clone.stackedTotal,\n            this.inferUnits(this.labelY),\n            1,\n            true,\n          );\n          const stackedTotalSuffix = this.getSuffix(stackedTotalConverted);\n          clone.stackedTotalHTML = `${this.limitDecimals(stackedTotalConverted.value)} ${stackedTotalSuffix}`;\n        }\n      }\n    });\n\n    this.reportsService.emitLegendEvent(clone);\n    return '';\n  };\n\n  drawCallback = (dygraph: Dygraph & { axes_: { maxyval: number }[] }): void => {\n    if (dygraph.axes_.length) {\n      const numero = dygraph.axes_[0].maxyval;\n      if (this.report?.name === ReportingGraphName.NetworkInterface) {\n        const [, unit] = normalizeFileSize(numero * 1000, 'b', 10);\n        this.yLabelPrefix = unit;\n        return;\n      }\n      const converted = this.formatLabelValue(numero, this.inferUnits(this.labelY));\n      if (converted.prefix) {\n        this.yLabelPrefix = converted.prefix;\n      } else {\n        this.yLabelPrefix = '';\n      }\n    } else {\n      console.warn('axes not found');\n    }\n  };\n\n  zoomCallback = (startDate: number, endDate: number): void => {\n    const maxZoomLevel = 5 * 60 * 1000;\n    const zoomRange = endDate - startDate;\n\n    if (zoomRange < maxZoomLevel) {\n      this.chart.updateOptions({\n        dateWindow: [this.lastMinDate, this.lastMaxDate],\n        animatedZooms: false,\n      });\n      return;\n    }\n\n    this.lastMinDate = startDate;\n    this.lastMaxDate = endDate;\n    this.zoomChange.emit([startDate, endDate]);\n  };\n\n  getValueForAxis(value: number, prefix: string): number {\n    if (prefix === 'Tebi') return value / 1000 ** 4;\n    if (prefix === 'Gibi') return value / 1000 ** 3;\n    if (prefix === 'Mebi') return value / 1000 ** 2;\n    if (prefix === 'Kibi') return value / 1000;\n    return value;\n  }\n\n  convertKmgt(value: number, units: string, fixed?: number, prefixRules?: boolean): Conversion {\n    let prefix = '';\n    let newValue: number = value;\n    let shortName = '';\n\n    if (value > TiB || (prefixRules && this.yLabelPrefix === 'Tebi')) {\n      prefix = 'Tebi';\n      shortName = 'TiB';\n      newValue = value / TiB;\n    } else if ((value < TiB && value > GiB) || (prefixRules && this.yLabelPrefix === 'Gibi')) {\n      prefix = 'Gibi';\n      shortName = 'GiB';\n      newValue = value / GiB;\n    } else if ((value < GiB && value > MiB) || (prefixRules && this.yLabelPrefix === 'Mebi')) {\n      prefix = 'Mebi';\n      shortName = 'MiB';\n      newValue = value / MiB;\n    } else if ((value < MiB && value > KiB) || (prefixRules && this.yLabelPrefix === 'Kibi')) {\n      prefix = 'Kibi';\n      shortName = 'KiB';\n      newValue = value / KiB;\n    }\n\n    if (units === 'bits') {\n      shortName = shortName.replace(/i/, '').trim();\n      shortName = ` ${shortName.charAt(0).toUpperCase()}${shortName.substring(1).toLowerCase()}`; // Kb, Mb, Gb, Tb\n    }\n\n    return { value: newValue, prefix, shortName };\n  }\n\n  ngOnChanges(changes: IxSimpleChanges<this>): void {\n    if (changes.data) {\n      this.render();\n\n      if (this.chart) {\n        this.render(true);\n      } else {\n        this.render();// make an update method?\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.render();\n  }\n\n  ngOnDestroy(): void {\n    this.chart?.destroy();\n  }\n}\n"],"version":3}