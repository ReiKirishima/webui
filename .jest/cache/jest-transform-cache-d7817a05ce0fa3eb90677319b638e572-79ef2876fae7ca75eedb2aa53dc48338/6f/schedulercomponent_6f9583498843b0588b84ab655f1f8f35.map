{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/scheduler/components/scheduler/scheduler.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/scheduler/components/scheduler/scheduler.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\nimport {\n  SchedulerModalConfig,\n} from 'app/modules/scheduler/components/scheduler-modal/scheduler-modal-config.interface';\nimport {\n  SchedulerModalComponent,\n} from 'app/modules/scheduler/components/scheduler-modal/scheduler-modal.component';\nimport { CronPresetValue, getDefaultCrontabPresets } from 'app/modules/scheduler/utils/get-default-crontab-presets.utils';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-scheduler',\n  templateUrl: './scheduler.component.html',\n  styleUrls: ['./scheduler.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SchedulerComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() tooltip: string;\n  @Input() required = false;\n  @Input() hideMinutes = false;\n\n  protected readonly customValue = 'custom';\n  /**\n   * Optional extra time boundaries for every day, i.e. \"15:30\" - \"23:30\"\n   */\n  @Input() startTime: string;\n  @Input() endTime: string;\n\n  readonly defaultPresets = getDefaultCrontabPresets(this.translate);\n\n  isDisabled = false;\n  crontab: string;\n  customCrontab: string;\n\n  onTouched: () => void;\n  onChange: (crontab: string) => void;\n\n  constructor(\n    public controlDirective: NgControl,\n    private matDialog: MatDialog,\n    private translate: TranslateService,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  registerOnChange(onChange: (crontab: string) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  writeValue(crontab: string): void {\n    this.crontab = crontab;\n    const isDefaultPreset = this.defaultPresets.some((preset) => preset.value === crontab);\n    if (!isDefaultPreset && crontab) {\n      this.customCrontab = crontab;\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  onCustomOptionSelected(previousValue: string): void {\n    this.matDialog.open(SchedulerModalComponent, {\n      data: {\n        startTime: this.startTime,\n        endTime: this.endTime,\n        hideMinutes: this.hideMinutes,\n        crontab: previousValue,\n      } as SchedulerModalConfig,\n    })\n      .afterClosed()\n      .pipe(filter(Boolean), untilDestroyed(this))\n      .subscribe((newCrontab: string) => {\n        if (Object.values(CronPresetValue).includes(newCrontab as CronPresetValue)) {\n          this.customCrontab = undefined;\n        } else {\n          this.customCrontab = newCrontab;\n        }\n        this.cdr.markForCheck();\n        this.crontab = newCrontab;\n        this.onChange(newCrontab);\n        this.cdr.markForCheck();\n      });\n  }\n\n  onOptionSelectionChange(value: MatOptionSelectionChange<string>): void {\n    if (!value.source.selected) {\n      return;\n    }\n    if (!value.isUserInput) {\n      return;\n    }\n    const selection = value.source.value as CronPresetValue;\n    if (selection.toString() === this.customValue) {\n      this.onCustomOptionSelected(undefined);\n    } else if (!Object.values(CronPresetValue).includes(selection)) {\n      this.onCustomOptionSelected(selection);\n    } else {\n      this.crontab = selection;\n      this.customCrontab = undefined;\n      this.onChange(selection);\n      this.cdr.markForCheck();\n    }\n  }\n}\n"],"version":3}