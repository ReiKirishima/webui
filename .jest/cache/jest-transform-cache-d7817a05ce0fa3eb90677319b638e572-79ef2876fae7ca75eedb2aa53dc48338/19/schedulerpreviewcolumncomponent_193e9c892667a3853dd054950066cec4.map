{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/scheduler/components/scheduler-modal/scheduler-preview-column/scheduler-preview-column.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/scheduler/components/scheduler-modal/scheduler-preview-column/scheduler-preview-column.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatCalendar, MatCalendarCellClassFunction } from '@angular/material/datepicker';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport {\n  getDate, isBefore,\n  startOfMonth, differenceInCalendarMonths,\n} from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport { CronSchedulePreview } from 'app/modules/scheduler/classes/cron-schedule-preview/cron-schedule-preview';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-scheduler-preview-column',\n  templateUrl: './scheduler-preview-column.component.html',\n  styleUrls: ['./scheduler-preview-column.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SchedulerPreviewColumnComponent implements OnChanges, OnInit {\n  @Input() crontab: string;\n  @Input() timezone: string;\n\n  @Input() startTime: string;\n  @Input() endTime: string;\n\n  /**\n   * 1 for 1st day of the month, etc.\n   */\n  highlightedCalendarDays = new Set<number>();\n\n  cronPreview: CronSchedulePreview;\n\n  @ViewChild('calendar', { static: true }) calendar: MatCalendar<Date>;\n\n  get startDate(): Date {\n    if (!this.calendar.activeDate || differenceInCalendarMonths(this.calendar.activeDate, new Date()) < 1) {\n      return utcToZonedTime(new Date(), this.timezone);\n    }\n\n    return startOfMonth(this.calendar.activeDate);\n  }\n\n  get isPastMonth(): boolean {\n    return isBefore(this.calendar.activeDate, startOfMonth(new Date()));\n  }\n\n  ngOnChanges(): void {\n    this.updatePreviewDates();\n    this.refreshCalendar();\n  }\n\n  ngOnInit(): void {\n    this.calendar.stateChanges\n      .pipe(untilDestroyed(this))\n      .subscribe(() => this.onCalendarUpdated());\n  }\n\n  getSelectedDateClass: MatCalendarCellClassFunction<Date> = (dateInCalendar): string => {\n    const dayNumber = getDate(dateInCalendar);\n    if (this.highlightedCalendarDays.has(dayNumber)) {\n      return 'highlighted-date';\n    }\n\n    return '';\n  };\n\n  onCalendarUpdated(): void {\n    this.updatePreviewDates();\n  }\n\n  private updatePreviewDates(): void {\n    if (this.isPastMonth) {\n      this.cronPreview = null;\n      this.highlightedCalendarDays = new Set();\n      return;\n    }\n\n    try {\n      this.cronPreview = new CronSchedulePreview({\n        crontab: this.crontab,\n        startTime: this.startTime,\n        endTime: this.endTime,\n      });\n\n      this.highlightedCalendarDays = this.cronPreview.getNextDaysInMonthWithRuns(this.startDate);\n    } catch (error: unknown) {\n      console.error(error);\n    }\n  }\n\n  private refreshCalendar(): void {\n    if (!this.calendar.monthView) {\n      return;\n    }\n\n    this.calendar.updateTodaysDate();\n  }\n}\n"],"version":3}