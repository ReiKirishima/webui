{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/enums/cloudsync-provider.enum.ts","mappings":";;;AAAA,0FAAsE;AAEtE,IAAY,qBAmBX;AAnBD,WAAY,qBAAqB;IAC/B,wCAAe,CAAA;IACf,2CAAkB,CAAA;IAClB,oCAAW,CAAA;IACX,4CAAmB,CAAA;IACnB,oCAAW,CAAA;IACX,oEAA2C,CAAA;IAC3C,qDAA4B,CAAA;IAC5B,uDAA8B,CAAA;IAC9B,sCAAa,CAAA;IACb,wCAAe,CAAA;IACf,sCAAa,CAAA;IACb,qDAA4B,CAAA;IAC5B,2DAAkC,CAAA;IAClC,0CAAiB,CAAA;IACjB,sCAAa,CAAA;IACb,2CAAkB,CAAA;IAClB,0CAAiB,CAAA;IACjB,0CAAiB,CAAA;AACnB,CAAC,EAnBW,qBAAqB,qCAArB,qBAAqB,QAmBhC;AAEY,QAAA,wBAAwB,GAAG,IAAI,GAAG,CAAgC;IAC7E,CAAC,qBAAqB,CAAC,QAAQ,EAAE,IAAA,qCAAC,EAAC,WAAW,CAAC,CAAC;IAChD,CAAC,qBAAqB,CAAC,WAAW,EAAE,IAAA,qCAAC,EAAC,cAAc,CAAC,CAAC;IACtD,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAA,qCAAC,EAAC,KAAK,CAAC,CAAC;IACrC,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAA,qCAAC,EAAC,SAAS,CAAC,CAAC;IAC7C,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAA,qCAAC,EAAC,KAAK,CAAC,CAAC;IACrC,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,IAAA,qCAAC,EAAC,sBAAsB,CAAC,CAAC;IACrE,CAAC,qBAAqB,CAAC,WAAW,EAAE,IAAA,qCAAC,EAAC,cAAc,CAAC,CAAC;IACtD,CAAC,qBAAqB,CAAC,YAAY,EAAE,IAAA,qCAAC,EAAC,eAAe,CAAC,CAAC;IACxD,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAA,qCAAC,EAAC,OAAO,CAAC,CAAC;IACzC,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAA,qCAAC,EAAC,MAAM,CAAC,CAAC;IACvC,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAA,qCAAC,EAAC,MAAM,CAAC,CAAC;IACvC,CAAC,qBAAqB,CAAC,cAAc,EAAE,IAAA,qCAAC,EAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC,qBAAqB,CAAC,cAAc,EAAE,IAAA,qCAAC,EAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAA,qCAAC,EAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAA,qCAAC,EAAC,MAAM,CAAC,CAAC;IACvC,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAA,qCAAC,EAAC,OAAO,CAAC,CAAC;IACzC,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAA,qCAAC,EAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAA,qCAAC,EAAC,QAAQ,CAAC,CAAC;CAC5C,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/enums/cloudsync-provider.enum.ts"],"sourcesContent":["import { marker as T } from '@biesbjerg/ngx-translate-extract-marker';\n\nexport enum CloudSyncProviderName {\n  AmazonS3 = 'S3',\n  BackblazeB2 = 'B2',\n  Box = 'BOX',\n  Dropbox = 'DROPBOX',\n  Ftp = 'FTP',\n  GoogleCloudStorage = 'GOOGLE_CLOUD_STORAGE',\n  GoogleDrive = 'GOOGLE_DRIVE',\n  GooglePhotos = 'GOOGLE_PHOTOS',\n  Http = 'HTTP',\n  Hubic = 'HUBIC',\n  Mega = 'MEGA',\n  MicrosoftAzure = 'AZUREBLOB',\n  OpenstackSwift = 'OPENSTACK_SWIFT',\n  Pcloud = 'PCLOUD',\n  Sftp = 'SFTP',\n  Storj = 'STORJ_IX',\n  Webdav = 'WEBDAV',\n  Yandex = 'YANDEX',\n}\n\nexport const cloudSyncProviderNameMap = new Map<CloudSyncProviderName, string>([\n  [CloudSyncProviderName.AmazonS3, T('Amazon S3')],\n  [CloudSyncProviderName.BackblazeB2, T('Backblaze B2')],\n  [CloudSyncProviderName.Box, T('Box')],\n  [CloudSyncProviderName.Dropbox, T('Dropbox')],\n  [CloudSyncProviderName.Ftp, T('FTP')],\n  [CloudSyncProviderName.GoogleCloudStorage, T('Google Cloud Storage')],\n  [CloudSyncProviderName.GoogleDrive, T('Google Drive')],\n  [CloudSyncProviderName.GooglePhotos, T('Google Photos')],\n  [CloudSyncProviderName.Hubic, T('Hubic')],\n  [CloudSyncProviderName.Http, T('HTTP')],\n  [CloudSyncProviderName.Mega, T('Mega')],\n  [CloudSyncProviderName.MicrosoftAzure, T('Microsoft Azure')],\n  [CloudSyncProviderName.OpenstackSwift, T('OpenStack Swift')],\n  [CloudSyncProviderName.Pcloud, T('pCloud')],\n  [CloudSyncProviderName.Sftp, T('SFTP')],\n  [CloudSyncProviderName.Storj, T('Storj')],\n  [CloudSyncProviderName.Webdav, T('WebDAV')],\n  [CloudSyncProviderName.Yandex, T('Yandex')],\n]);\n"],"version":3}