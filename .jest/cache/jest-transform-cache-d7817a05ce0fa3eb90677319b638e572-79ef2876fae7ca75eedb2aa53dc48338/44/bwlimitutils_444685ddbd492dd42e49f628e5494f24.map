{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/helpers/bwlimit.utils.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/helpers/bwlimit.utils.ts"],"sourcesContent":["import {\n  TiB, GiB, MiB, KiB,\n  PiB,\n} from 'app/constants/bytes.constant';\nimport { BwLimitUpdate } from 'app/interfaces/cloud-sync-task.interface';\n\nconst byteMap = {\n  P: PiB,\n  T: TiB,\n  G: GiB,\n  M: MiB,\n  K: KiB,\n  B: 1,\n};\n\nfunction getByte(data: string): number {\n  let unit: keyof typeof byteMap = 'B'; // default unit\n  let index = -1;\n\n  for (let i = 0; i < data.length; i++) {\n    if (Object.keys(byteMap).includes(data[i].toUpperCase())) {\n      unit = data[i].toUpperCase() as keyof typeof byteMap;\n      index = i;\n      break;\n    }\n  }\n  const restUnit = data.slice(index + 1, data.length).toUpperCase();\n  if (index === -1 && Number(data)) {\n    return Number(data) * byteMap[unit];\n  }\n  if (restUnit === 'IB' || restUnit === 'B' || restUnit === '') {\n    if (unit === 'B' && restUnit !== '') {\n      return -1;\n    }\n    return Number(data.slice(0, index)) * byteMap[unit];\n  }\n  return -1;\n}\n\nexport function prepareBwlimit(bwlimit: string[]): BwLimitUpdate[] {\n  const bwlimtResult: BwLimitUpdate[] = [];\n\n  if (!bwlimit?.length) {\n    return bwlimtResult;\n  }\n\n  for (const limit of bwlimit) {\n    const sublimitArr = limit.split(/\\s*,\\s*/);\n    if (sublimitArr.length === 1 && bwlimit.length === 1 && !sublimitArr[0].includes(':')) {\n      sublimitArr.unshift('00:00');\n    }\n    if (sublimitArr[1] && sublimitArr[1] !== 'off') {\n      if (sublimitArr[1].toLowerCase().endsWith('/s')) {\n        sublimitArr[1] = sublimitArr[1].substring(0, sublimitArr[1].length - 2);\n      }\n      if (getByte(sublimitArr[1]) !== -1) {\n        sublimitArr[1] = getByte(sublimitArr[1]).toFixed(0);\n      }\n    }\n    const subLimit: BwLimitUpdate = {\n      time: sublimitArr[0],\n      bandwidth: sublimitArr[1] === 'off' ? null : sublimitArr[1],\n    };\n\n    bwlimtResult.push(subLimit);\n  }\n\n  return bwlimtResult;\n}\n"],"version":3}