{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/data-protection/cloud-backup/cloud-backup-form/cloud-backup-form.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/data-protection/cloud-backup/cloud-backup-form/cloud-backup-form.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { of } from 'rxjs';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockCall, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { CloudSyncProviderName } from 'app/enums/cloudsync-provider.enum';\nimport { CloudBackup } from 'app/interfaces/cloud-backup.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport {\n  CloudCredentialsSelectComponent,\n} from 'app/modules/forms/custom-selects/cloud-credentials-select/cloud-credentials-select.component';\nimport { ChainedRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/chained-component-ref';\nimport { IxFormHarness } from 'app/modules/forms/ix-forms/testing/ix-form.harness';\nimport { SchedulerModule } from 'app/modules/scheduler/scheduler.module';\nimport { CloudBackupFormComponent } from 'app/pages/data-protection/cloud-backup/cloud-backup-form/cloud-backup-form.component';\nimport { googlePhotosCreds, googlePhotosProvider, storjProvider } from 'app/pages/data-protection/cloudsync/cloudsync-wizard/cloudsync-wizard.testing.utils';\nimport {\n  TransferModeExplanationComponent,\n} from 'app/pages/data-protection/cloudsync/transfer-mode-explanation/transfer-mode-explanation.component';\nimport { CloudCredentialService } from 'app/services/cloud-credential.service';\nimport { FilesystemService } from 'app/services/filesystem.service';\nimport { IxChainedSlideInService } from 'app/services/ix-chained-slide-in.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ndescribe('CloudBackupFormComponent', () => {\n  const storjCreds = {\n    id: 2,\n    name: 'Storj iX',\n    provider: CloudSyncProviderName.Storj,\n    attributes: {\n      client_id: 'test-client-id',\n      client_secret: 'test-client-secret',\n      token: 'test-token',\n    },\n  };\n\n  const existingTask = {\n    id: 1,\n    description: 'sdf',\n    path: '/mnt/my pool',\n    attributes: {\n      folder: '/My Folder',\n      chunk_size: 48,\n    },\n    pre_script: '',\n    post_script: '',\n    snapshot: false,\n    bwlimit: [],\n    include: [],\n    exclude: [],\n    transfers: 5,\n    args: '',\n    enabled: true,\n    job: null,\n    password: '1234',\n    keep_last: 2,\n    credentials: storjCreds,\n    schedule: {\n      minute: '0',\n      hour: '0',\n      dom: '*',\n      month: '*',\n      dow: 'sun',\n    },\n    locked: false,\n  } as CloudBackup;\n\n  let loader: HarnessLoader;\n  let spectator: Spectator<CloudBackupFormComponent>;\n  const getData = jest.fn(() => existingTask);\n  const chainedComponentRef: ChainedRef<CloudBackup> = {\n    close: jest.fn(),\n    getData: jest.fn(() => undefined),\n    swap: jest.fn(),\n  };\n  const createComponent = createComponentFactory({\n    component: CloudBackupFormComponent,\n    imports: [\n      SchedulerModule,\n      CloudCredentialsSelectComponent,\n      ReactiveFormsModule,\n    ],\n    declarations: [\n      TransferModeExplanationComponent,\n    ],\n    providers: [\n      mockAuth(),\n      mockProvider(DialogService),\n      mockWebSocket([\n        mockCall('cloud_backup.create', existingTask),\n        mockCall('cloud_backup.update', existingTask),\n        mockCall('cloudsync.create_bucket'),\n      ]),\n      mockProvider(IxChainedSlideInService, {\n        open: jest.fn(() => of()),\n        components$: of([]),\n      }),\n      mockProvider(CloudCredentialService, {\n        getCloudSyncCredentials: jest.fn(() => of([googlePhotosCreds, storjCreds])),\n        getProviders: jest.fn(() => of([storjProvider, googlePhotosProvider])),\n        getBuckets: jest.fn(() => of([{ Name: 'bucket1', Path: 'path_to_bucket1', Enabled: true }])),\n      }),\n      mockProvider(FilesystemService),\n      mockProvider(ChainedRef, chainedComponentRef),\n    ],\n  });\n\n  describe('adds a new cloud backup', () => {\n    beforeEach(() => {\n      spectator = createComponent();\n      loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n    });\n\n    it('adds a new cloud backup task and creates a new bucket', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      await form.fillForm({\n        'Source Path': '/mnt/my pool 2',\n        Name: 'Cloud Backup Task With New Bucket',\n        Password: 'qwerty',\n        Credentials: 'Storj iX (Storj)',\n        'Keep Last': 5,\n        Folder: '/',\n        Bucket: 'Add new',\n        'New Bucket Name': 'brand-new-bucket',\n      });\n\n      const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n      await saveButton.click();\n\n      expect(spectator.inject(WebSocketService).call).toHaveBeenNthCalledWith(1, 'cloudsync.create_bucket', [\n        2,\n        'brand-new-bucket',\n      ]);\n\n      expect(spectator.inject(WebSocketService).call).toHaveBeenNthCalledWith(2, 'cloud_backup.create', [{\n        args: '',\n        attributes: { folder: '/', bucket: 'brand-new-bucket' },\n        bwlimit: [],\n        credentials: 2,\n        description: 'Cloud Backup Task With New Bucket',\n        enabled: true,\n        exclude: [],\n        include: [],\n        keep_last: 5,\n        password: 'qwerty',\n        path: '/mnt/my pool 2',\n        post_script: '',\n        pre_script: '',\n        schedule: {\n          dom: '*',\n          dow: '*',\n          hour: '0',\n          minute: '0',\n          month: '*',\n        },\n        snapshot: false,\n        transfers: null,\n      }]);\n      expect(chainedComponentRef.close).toHaveBeenCalledWith({ response: existingTask, error: null });\n    });\n\n    it('adds a new cloud backup task when new form is saved', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      await form.fillForm({\n        'Source Path': '/mnt/my pool 2',\n        Name: 'New Cloud Backup Task',\n        Password: 'qwerty',\n        Credentials: 'Storj iX (Storj)',\n        'Keep Last': 3,\n        Folder: '/',\n        Enabled: false,\n        Transfers: 22,\n        Bucket: 'bucket1',\n        'Take Snapshot': true,\n        Exclude: ['/test'],\n      });\n\n      const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n      await saveButton.click();\n\n      expect(spectator.inject(WebSocketService).call).toHaveBeenLastCalledWith('cloud_backup.create', [{\n        args: '',\n        attributes: { folder: '/', bucket: 'path_to_bucket1' },\n        bwlimit: [],\n        credentials: 2,\n        description: 'New Cloud Backup Task',\n        enabled: false,\n        exclude: ['/test'],\n        include: [],\n        keep_last: 3,\n        password: 'qwerty',\n        path: '/mnt/my pool 2',\n        post_script: '',\n        pre_script: '',\n        schedule: {\n          dom: '*',\n          dow: '*',\n          hour: '0',\n          minute: '0',\n          month: '*',\n        },\n        snapshot: true,\n        transfers: 22,\n      }]);\n      expect(chainedComponentRef.close).toHaveBeenCalledWith({ response: existingTask, error: null });\n    });\n  });\n\n  describe('edits an existing cloud backup', () => {\n    beforeEach(() => {\n      spectator = createComponent({\n        providers: [\n          mockProvider(ChainedRef, {\n            ...chainedComponentRef,\n            getData,\n          }),\n        ],\n      });\n      loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n    });\n\n    it('shows values for an existing cloud backup task when it is open for edit', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      expect(await form.getValues()).toEqual({\n        'Bandwidth Limit': [],\n        Bucket: '',\n        Credentials: 'Storj iX (Storj)',\n        Enabled: true,\n        Exclude: [],\n        Name: 'sdf',\n        Folder: '/My Folder',\n        'Keep Last': '2',\n        Password: '1234',\n        'Post-script': '',\n        'Pre-script': '',\n        Schedule: 'Weekly (0 0 * * sun)  On Sundays at 00:00 (12:00 AM)',\n        'Source Path': '/mnt/my pool',\n        'Take Snapshot': false,\n        Transfers: '5',\n      });\n\n      expect(spectator.component.form.value).toEqual({\n        args: '',\n        bucket: '',\n        bwlimit: [],\n        credentials: 2,\n        description: 'sdf',\n        enabled: true,\n        exclude: [],\n        folder: '/My Folder',\n        keep_last: 2,\n        password: '1234',\n        path: '/mnt/my pool',\n        post_script: '',\n        pre_script: '',\n        schedule: '0 0 * * sun',\n        snapshot: false,\n        transfers: 5,\n      });\n    });\n\n    it('saves updated cloud backup task when form opened for edit is saved', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      await form.fillForm({\n        Name: 'Edited description',\n        Password: 'qwerty123',\n        Bucket: 'bucket1',\n        'Source Path': '/mnt/path1',\n        'Bandwidth Limit': ['00:00,10G', '12:00,20M', '18:00,10K', '20:00,off'],\n      });\n\n      const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n      await saveButton.click();\n\n      expect(spectator.inject(WebSocketService).call).toHaveBeenLastCalledWith('cloud_backup.update', [1, {\n        args: '',\n        attributes: {\n          folder: '/My Folder',\n          bucket: 'path_to_bucket1',\n        },\n        bwlimit: [\n          {\n            bandwidth: '10737418240',\n            time: '00:00',\n          },\n          {\n            bandwidth: '20971520',\n            time: '12:00',\n          },\n          {\n            bandwidth: '10240',\n            time: '18:00',\n          },\n          {\n            bandwidth: null,\n            time: '20:00',\n          },\n        ],\n        credentials: 2,\n        description: 'Edited description',\n        enabled: true,\n        exclude: [],\n        include: [],\n        keep_last: 2,\n        password: 'qwerty123',\n        path: '/mnt/path1',\n        post_script: '',\n        pre_script: '',\n        schedule: {\n          dom: '*',\n          dow: 'sun',\n          hour: '0',\n          minute: '0',\n          month: '*',\n        },\n        snapshot: false,\n        transfers: 5,\n      }]);\n      expect(chainedComponentRef.close).toHaveBeenCalledWith({ response: existingTask, error: null });\n    });\n  });\n});\n"],"version":3}