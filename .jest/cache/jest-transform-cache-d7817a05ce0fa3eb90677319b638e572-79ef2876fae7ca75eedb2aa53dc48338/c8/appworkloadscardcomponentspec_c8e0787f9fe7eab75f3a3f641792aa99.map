{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/components/installed-apps/app-workloads-card/app-workloads-card.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/components/installed-apps/app-workloads-card/app-workloads-card.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Spectator } from '@ngneat/spectator';\nimport { createComponentFactory, mockProvider } from '@ngneat/spectator/jest';\nimport { MockComponent } from 'ng-mocks';\nimport { of } from 'rxjs';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { AppState } from 'app/enums/app-state.enum';\nimport { App, AppContainerState } from 'app/interfaces/app.interface';\nimport { MapValuePipe } from 'app/modules/pipes/map-value/map-value.pipe';\nimport { AppWorkloadsCardComponent } from 'app/pages/apps/components/installed-apps/app-workloads-card/app-workloads-card.component';\nimport {\n  VolumeMountsDialogComponent,\n} from 'app/pages/apps/components/installed-apps/app-workloads-card/volume-mounts-dialog/volume-mounts-dialog.component';\nimport { ShellDetailsDialogComponent } from 'app/pages/apps/components/shell-details-dialog/shell-details-dialog.component';\nimport { ShellDetailsType } from 'app/pages/apps/enum/shell-details-type.enum';\n\ndescribe('AppContainersCardComponent', () => {\n  let spectator: Spectator<AppWorkloadsCardComponent>;\n  let loader: HarnessLoader;\n\n  const app = {\n    id: 'ix-test-app',\n    name: 'ix-test-app',\n    metadata: { train: 'ix-test-train' },\n    upgrade_available: true,\n    state: AppState.Running,\n    active_workloads:\n      {\n        containers: 1,\n        used_ports: [\n          {\n            container_port: '20489',\n            protocol: 'tcp',\n            host_ports: [\n              { host_port: '20489', host_ip: '0.0.0.0' },\n            ],\n          },\n          {\n            container_port: '80',\n            protocol: 'tcp',\n            host_ports: [\n              { host_port: '8080', host_ip: '0.0.0.0' },\n            ],\n          },\n        ],\n        container_details: [\n          {\n            id: '1',\n            service_name: 'netdata',\n            image: 'netdata/netdata:v1.46.1',\n            port_config: [],\n            state: AppContainerState.Running,\n            volume_mounts: [\n              {\n                source: '/etc/group',\n                destination: '/host/etc/group',\n                mode: '',\n                type: 'bind',\n              },\n            ],\n          },\n        ],\n      },\n  } as App;\n\n  const createComponent = createComponentFactory({\n    component: AppWorkloadsCardComponent,\n    declarations: [\n      MockComponent(VolumeMountsDialogComponent),\n    ],\n    imports: [\n      MapValuePipe,\n    ],\n    providers: [\n      mockProvider(MatDialog, {\n        open: jest.fn(() => of(true)),\n      }),\n      mockProvider(Router),\n      mockAuth(),\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createComponent({\n      props: {\n        app,\n      },\n    });\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n  });\n\n  it('shows header', () => {\n    expect(spectator.query('mat-card-header h3')).toHaveText('Workloads');\n  });\n\n  it('shows number of ports', () => {\n    const details = spectator.queryAll('.details-item');\n    expect(details).toHaveLength(1);\n\n    expect(details[0].querySelector('.label')).toHaveText('Ports:');\n    expect(details[0].querySelector('.value')).toHaveText('tcp://0.0.0.0:20489:20489');\n    expect(details[0].querySelector('.value')).toHaveText('tcp://0.0.0.0:8080:80');\n  });\n\n  it('shows container header and number of containers', () => {\n    expect(spectator.query('.containers h4')).toHaveText('Containers');\n  });\n\n  it('shows container list', () => {\n    const containers = spectator.queryAll('.container');\n    expect(containers).toHaveLength(1);\n\n    expect(containers[0].querySelector('.service-name')).toHaveText('netdata');\n    expect(containers[0].querySelector('.container-state')).toHaveText('Running');\n    expect(containers[0].querySelectorAll('.container-action button')).toHaveLength(3);\n  });\n\n  it('opens volume mounts dialog when Volume Mounts button is pressed', async () => {\n    const volumeButton = await loader.getHarness(MatButtonHarness.with({ selector: '[aria-label=\"Volume Mounts\"]' }));\n    await volumeButton.click();\n\n    expect(spectator.inject(MatDialog).open).toHaveBeenCalledWith(VolumeMountsDialogComponent, {\n      data: app.active_workloads.container_details[0],\n    });\n  });\n\n  it('opens shell app dialog when Shell button is pressed', async () => {\n    const shellButton = await loader.getHarness(MatButtonHarness.with({ selector: '[aria-label=\"Shell\"]' }));\n    await shellButton.click();\n\n    expect(spectator.inject(MatDialog).open).toHaveBeenCalledWith(\n      ShellDetailsDialogComponent,\n      {\n        minWidth: '650px',\n        maxWidth: '850px',\n        data: {\n          appName: app.name,\n          title: 'Choose Shell Details',\n          type: ShellDetailsType.Shell,\n          customSubmit: expect.any(Function),\n          minWidth: '40vw',\n        },\n      },\n    );\n  });\n\n  it('redirects to logs page when View Logs button is pressed', async () => {\n    const showLogsButton = await loader.getHarness(MatButtonHarness.with({ selector: '[aria-label=\"View Logs\"]' }));\n    await showLogsButton.click();\n\n    expect(spectator.inject(Router).navigate).toHaveBeenCalledWith(\n      ['/apps', 'installed', 'ix-test-train', 'ix-test-app', 'logs', '1'],\n    );\n  });\n});\n"],"version":3}