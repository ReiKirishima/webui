{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-select/ix-select-with-new-option.directive.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-select/ix-select-with-new-option.directive.ts"],"sourcesContent":["import { ComponentType } from '@angular/cdk/portal';\nimport {\n  AfterViewInit, Directive, Input, OnInit, ViewChild, inject,\n} from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable, distinctUntilChanged, filter, map, switchMap, take, tap,\n} from 'rxjs';\nimport { Option } from 'app/interfaces/option.interface';\nimport { IxSelectComponent, IxSelectValue } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { ChainedComponentResponse, IxChainedSlideInService } from 'app/services/ix-chained-slide-in.service';\n\nexport const addNewIxSelectValue = 'ADD_NEW';\n\n@UntilDestroy()\n@Directive()\nexport abstract class IxSelectWithNewOption implements OnInit, AfterViewInit {\n  @Input() disabled: boolean;\n  formComponentIsWide = false;\n\n  @ViewChild(IxSelectComponent) private ixSelect: IxSelectComponent;\n\n  private options = new BehaviorSubject<Option[]>([]);\n\n  private chainedSlideIn = inject(IxChainedSlideInService);\n  private translateService = inject(TranslateService);\n\n  ngOnInit(): void {\n    this.fetchOptions().pipe(\n      map((options) => {\n        return [\n          { label: this.translateService.instant('Add New'), value: addNewIxSelectValue } as Option,\n          ...options,\n        ];\n      }),\n      take(1),\n      untilDestroyed(this),\n    ).subscribe({\n      next: (options) => {\n        this.options.next(options);\n      },\n    });\n  }\n\n  abstract getValueFromChainedResponse(\n    result: ChainedComponentResponse,\n  ): IxSelectValue;\n  abstract getFormComponentType(): ComponentType<unknown>;\n  abstract fetchOptions(): Observable<Option[]>;\n  getFormInputData(): Record<string, unknown> {\n    return undefined;\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.ixSelect) {\n      return;\n    }\n    this.ixSelect.options = this.options.asObservable();\n    this.ixSelect.ngOnChanges();\n    this.ixSelect.controlDirective.control.valueChanges.pipe(\n      distinctUntilChanged(),\n      filter(Boolean),\n      filter((newValue: number | string) => newValue === addNewIxSelectValue),\n      switchMap(() => {\n        return this.chainedSlideIn.open(\n          this.getFormComponentType(),\n          this.formComponentIsWide,\n          this.getFormInputData(),\n        );\n      }),\n      filter((response: ChainedComponentResponse) => !response.error),\n      tap(\n        (response) => this.ixSelect.controlDirective.control.setValue(\n          this.getValueFromChainedResponse(response),\n        ),\n      ),\n      switchMap(() => this.fetchOptions()),\n      tap((options) => this.options.next([\n        { label: this.translateService.instant('Add New'), value: addNewIxSelectValue } as Option,\n        ...options,\n      ])),\n      untilDestroyed(this),\n    ).subscribe();\n  }\n}\n"],"version":3}